Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEF
    RETURN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> linea programa
Rule 2     programa -> <empty>
Rule 3     linea -> expresion NEWLINE
Rule 4     linea -> expresion
Rule 5     linea -> NEWLINE
Rule 6     lista_declaraciones -> declaracion
Rule 7     lista_declaraciones -> lista_declaraciones COMA declaracion
Rule 8     declaracion -> ID
Rule 9     declaracion -> ID EQ expresion
Rule 10    declaracion -> CE ENTERO CA ID
Rule 11    expresion -> ID PNTO LEN
Rule 12    elemento -> ID CE ENTERO CA
Rule 13    expresion -> ID CE ENTERO CA EQ expresion
Rule 14    expresion -> tipo lista_declaraciones
Rule 15    expresion -> ID EQ expresion
Rule 16    expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
Rule 17    grupo_apertura -> opt_newline LLE opt_newline
Rule 18    grupo_cierre -> opt_newline LLA opt_newline
Rule 19    opt_newline -> NEWLINE
Rule 20    opt_newline -> <empty>
Rule 21    bloque_propiedades -> propiedad
Rule 22    bloque_propiedades -> propiedad NEWLINE
Rule 23    bloque_propiedades -> propiedad NEWLINE bloque_propiedades
Rule 24    bloque_propiedades -> propiedad bloque_propiedades
Rule 25    bloque_propiedades -> NEWLINE bloque_propiedades
Rule 26    propiedad -> tipo lista_ids
Rule 27    lista_ids -> ID
Rule 28    lista_ids -> lista_ids COMA ID
Rule 29    expresion -> ids
Rule 30    ids -> ID ID
Rule 31    expresion -> ID PNTO ID
Rule 32    expresion -> ID PNTO ID EQ expresion
Rule 33    expresion -> ID CE ENTERO CA PNTO ID
Rule 34    expresion -> IF expresion bloque
Rule 35    expresion -> IF expresion bloque ELSE bloque
Rule 36    expresion -> WHILE expresion bloque
Rule 37    bloque -> grupo_apertura expresiones grupo_cierre
Rule 38    expresiones -> expresion
Rule 39    expresiones -> expresion NEWLINE
Rule 40    expresiones -> expresion NEWLINE expresiones
Rule 41    tipo_base -> INT
Rule 42    tipo_base -> FLOAT
Rule 43    tipo_base -> BOOL
Rule 44    tipo_base -> CHAR
Rule 45    tipo -> tipo_base
Rule 46    tipo -> tipo_base CE ENTERO CA
Rule 47    tipo -> ID
Rule 48    tipo -> ID CE ENTERO CA
Rule 49    expresion -> expresion OR expresion_logica
Rule 50    expresion -> expresion_logica
Rule 51    expresion_logica -> expresion_logica AND expresion_relacional
Rule 52    expresion_logica -> expresion_relacional
Rule 53    expresion_relacional -> termino_aritmetico I termino_aritmetico
Rule 54    expresion_relacional -> termino_aritmetico M termino_aritmetico
Rule 55    expresion_relacional -> termino_aritmetico m termino_aritmetico
Rule 56    expresion_relacional -> termino_aritmetico MI termino_aritmetico
Rule 57    expresion_relacional -> termino_aritmetico mI termino_aritmetico
Rule 58    expresion_relacional -> termino_aritmetico
Rule 59    termino_aritmetico -> termino_aritmetico SUM factor
Rule 60    termino_aritmetico -> termino_aritmetico RES factor
Rule 61    termino_aritmetico -> factor
Rule 62    factor -> factor MUL elemento
Rule 63    factor -> factor DIV elemento
Rule 64    factor -> elemento
Rule 65    booleano -> TRUE
Rule 66    booleano -> FALSE
Rule 67    elemento -> ENTERO
Rule 68    elemento -> REAL
Rule 69    elemento -> booleano
Rule 70    elemento -> CARACTER
Rule 71    elemento -> ID
Rule 72    elemento -> PE expresion PA
Rule 73    elemento -> RES elemento
Rule 74    elemento -> NOT elemento
Rule 75    elemento -> SEN PE expresion PA
Rule 76    elemento -> COS PE expresion PA
Rule 77    elemento -> EXP PE expresion PA
Rule 78    elemento -> LOG PE expresion PA

Terminals, with rules where they appear

AND                  : 51
BOOL                 : 43
CA                   : 10 12 13 33 46 48
CARACTER             : 70
CE                   : 10 12 13 33 46 48
CHAR                 : 44
COMA                 : 7 28
COS                  : 76
DEF                  : 
DIV                  : 63
DPNTO                : 16
ELSE                 : 35
ENTERO               : 10 12 13 33 46 48 67
EQ                   : 9 13 15 32
EXP                  : 77
FALSE                : 66
FLOAT                : 42
I                    : 53
ID                   : 8 9 10 11 12 13 15 16 27 28 30 30 31 31 32 32 33 33 47 48 71
IF                   : 34 35
INT                  : 41
LEN                  : 11
LLA                  : 18
LLE                  : 17
LOG                  : 78
M                    : 54
MI                   : 56
MUL                  : 62
NEWLINE              : 3 5 19 22 23 25 39 40
NOT                  : 74
OR                   : 49
PA                   : 72 75 76 77 78
PE                   : 72 75 76 77 78
PNTO                 : 11 31 32 33
REAL                 : 68
RES                  : 60 73
RETURN               : 
SEN                  : 75
SUM                  : 59
TRUE                 : 65
TYPE                 : 16
WHILE                : 36
error                : 
m                    : 55
mI                   : 57

Nonterminals, with rules where they appear

bloque               : 34 35 35 36
bloque_propiedades   : 16 23 24 25
booleano             : 69
declaracion          : 6 7
elemento             : 62 63 64 73 74
expresion            : 3 4 9 13 15 32 34 35 36 38 39 40 49 72 75 76 77 78
expresion_logica     : 49 50 51
expresion_relacional : 51 52
expresiones          : 37 40
factor               : 59 60 61 62 63
grupo_apertura       : 16 37
grupo_cierre         : 16 37
ids                  : 29
linea                : 1
lista_declaraciones  : 7 14
lista_ids            : 26 28
opt_newline          : 17 17 18 18
programa             : 1 0
propiedad            : 21 22 23 24
termino_aritmetico   : 53 53 54 54 55 55 56 56 57 57 58 59 60
tipo                 : 14 26
tipo_base            : 45 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . linea programa
    (2) programa -> .
    (3) linea -> . expresion NEWLINE
    (4) linea -> . expresion
    (5) linea -> . NEWLINE
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    $end            reduce using rule 2 (programa -> .)
    NEWLINE         shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    programa                       shift and go to state 1
    linea                          shift and go to state 2
    expresion                      shift and go to state 3
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 1

    (0) S' -> programa .



state 2

    (1) programa -> linea . programa
    (1) programa -> . linea programa
    (2) programa -> .
    (3) linea -> . expresion NEWLINE
    (4) linea -> . expresion
    (5) linea -> . NEWLINE
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    $end            reduce using rule 2 (programa -> .)
    NEWLINE         shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    linea                          shift and go to state 2
    programa                       shift and go to state 34
    expresion                      shift and go to state 3
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 3

    (3) linea -> expresion . NEWLINE
    (4) linea -> expresion .
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 35
    ID              reduce using rule 4 (linea -> expresion .)
    TYPE            reduce using rule 4 (linea -> expresion .)
    IF              reduce using rule 4 (linea -> expresion .)
    WHILE           reduce using rule 4 (linea -> expresion .)
    INT             reduce using rule 4 (linea -> expresion .)
    FLOAT           reduce using rule 4 (linea -> expresion .)
    BOOL            reduce using rule 4 (linea -> expresion .)
    CHAR            reduce using rule 4 (linea -> expresion .)
    ENTERO          reduce using rule 4 (linea -> expresion .)
    REAL            reduce using rule 4 (linea -> expresion .)
    CARACTER        reduce using rule 4 (linea -> expresion .)
    PE              reduce using rule 4 (linea -> expresion .)
    RES             reduce using rule 4 (linea -> expresion .)
    NOT             reduce using rule 4 (linea -> expresion .)
    SEN             reduce using rule 4 (linea -> expresion .)
    COS             reduce using rule 4 (linea -> expresion .)
    EXP             reduce using rule 4 (linea -> expresion .)
    LOG             reduce using rule 4 (linea -> expresion .)
    TRUE            reduce using rule 4 (linea -> expresion .)
    FALSE           reduce using rule 4 (linea -> expresion .)
    $end            reduce using rule 4 (linea -> expresion .)
    OR              shift and go to state 36

  ! NEWLINE         [ reduce using rule 4 (linea -> expresion .) ]


state 4

    (5) linea -> NEWLINE .

    NEWLINE         reduce using rule 5 (linea -> NEWLINE .)
    ID              reduce using rule 5 (linea -> NEWLINE .)
    TYPE            reduce using rule 5 (linea -> NEWLINE .)
    IF              reduce using rule 5 (linea -> NEWLINE .)
    WHILE           reduce using rule 5 (linea -> NEWLINE .)
    INT             reduce using rule 5 (linea -> NEWLINE .)
    FLOAT           reduce using rule 5 (linea -> NEWLINE .)
    BOOL            reduce using rule 5 (linea -> NEWLINE .)
    CHAR            reduce using rule 5 (linea -> NEWLINE .)
    ENTERO          reduce using rule 5 (linea -> NEWLINE .)
    REAL            reduce using rule 5 (linea -> NEWLINE .)
    CARACTER        reduce using rule 5 (linea -> NEWLINE .)
    PE              reduce using rule 5 (linea -> NEWLINE .)
    RES             reduce using rule 5 (linea -> NEWLINE .)
    NOT             reduce using rule 5 (linea -> NEWLINE .)
    SEN             reduce using rule 5 (linea -> NEWLINE .)
    COS             reduce using rule 5 (linea -> NEWLINE .)
    EXP             reduce using rule 5 (linea -> NEWLINE .)
    LOG             reduce using rule 5 (linea -> NEWLINE .)
    TRUE            reduce using rule 5 (linea -> NEWLINE .)
    FALSE           reduce using rule 5 (linea -> NEWLINE .)
    $end            reduce using rule 5 (linea -> NEWLINE .)


state 5

    (11) expresion -> ID . PNTO LEN
    (13) expresion -> ID . CE ENTERO CA EQ expresion
    (15) expresion -> ID . EQ expresion
    (31) expresion -> ID . PNTO ID
    (32) expresion -> ID . PNTO ID EQ expresion
    (33) expresion -> ID . CE ENTERO CA PNTO ID
    (47) tipo -> ID .
    (48) tipo -> ID . CE ENTERO CA
    (30) ids -> ID . ID
    (12) elemento -> ID . CE ENTERO CA
    (71) elemento -> ID .

  ! shift/reduce conflict for CE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PNTO            shift and go to state 38
    CE              shift and go to state 39
    EQ              shift and go to state 40
    ID              shift and go to state 37
    MUL             reduce using rule 71 (elemento -> ID .)
    DIV             reduce using rule 71 (elemento -> ID .)
    I               reduce using rule 71 (elemento -> ID .)
    M               reduce using rule 71 (elemento -> ID .)
    m               reduce using rule 71 (elemento -> ID .)
    MI              reduce using rule 71 (elemento -> ID .)
    mI              reduce using rule 71 (elemento -> ID .)
    SUM             reduce using rule 71 (elemento -> ID .)
    RES             reduce using rule 71 (elemento -> ID .)
    AND             reduce using rule 71 (elemento -> ID .)
    NEWLINE         reduce using rule 71 (elemento -> ID .)
    OR              reduce using rule 71 (elemento -> ID .)
    TYPE            reduce using rule 71 (elemento -> ID .)
    IF              reduce using rule 71 (elemento -> ID .)
    WHILE           reduce using rule 71 (elemento -> ID .)
    INT             reduce using rule 71 (elemento -> ID .)
    FLOAT           reduce using rule 71 (elemento -> ID .)
    BOOL            reduce using rule 71 (elemento -> ID .)
    CHAR            reduce using rule 71 (elemento -> ID .)
    ENTERO          reduce using rule 71 (elemento -> ID .)
    REAL            reduce using rule 71 (elemento -> ID .)
    CARACTER        reduce using rule 71 (elemento -> ID .)
    PE              reduce using rule 71 (elemento -> ID .)
    NOT             reduce using rule 71 (elemento -> ID .)
    SEN             reduce using rule 71 (elemento -> ID .)
    COS             reduce using rule 71 (elemento -> ID .)
    EXP             reduce using rule 71 (elemento -> ID .)
    LOG             reduce using rule 71 (elemento -> ID .)
    TRUE            reduce using rule 71 (elemento -> ID .)
    FALSE           reduce using rule 71 (elemento -> ID .)
    $end            reduce using rule 71 (elemento -> ID .)
    LLE             reduce using rule 71 (elemento -> ID .)
    PA              reduce using rule 71 (elemento -> ID .)
    COMA            reduce using rule 71 (elemento -> ID .)
    LLA             reduce using rule 71 (elemento -> ID .)

  ! ID              [ reduce using rule 47 (tipo -> ID .) ]
  ! CE              [ reduce using rule 47 (tipo -> ID .) ]
  ! ID              [ reduce using rule 71 (elemento -> ID .) ]


state 6

    (67) elemento -> ENTERO .

    MUL             reduce using rule 67 (elemento -> ENTERO .)
    DIV             reduce using rule 67 (elemento -> ENTERO .)
    I               reduce using rule 67 (elemento -> ENTERO .)
    M               reduce using rule 67 (elemento -> ENTERO .)
    m               reduce using rule 67 (elemento -> ENTERO .)
    MI              reduce using rule 67 (elemento -> ENTERO .)
    mI              reduce using rule 67 (elemento -> ENTERO .)
    SUM             reduce using rule 67 (elemento -> ENTERO .)
    RES             reduce using rule 67 (elemento -> ENTERO .)
    AND             reduce using rule 67 (elemento -> ENTERO .)
    NEWLINE         reduce using rule 67 (elemento -> ENTERO .)
    OR              reduce using rule 67 (elemento -> ENTERO .)
    ID              reduce using rule 67 (elemento -> ENTERO .)
    TYPE            reduce using rule 67 (elemento -> ENTERO .)
    IF              reduce using rule 67 (elemento -> ENTERO .)
    WHILE           reduce using rule 67 (elemento -> ENTERO .)
    INT             reduce using rule 67 (elemento -> ENTERO .)
    FLOAT           reduce using rule 67 (elemento -> ENTERO .)
    BOOL            reduce using rule 67 (elemento -> ENTERO .)
    CHAR            reduce using rule 67 (elemento -> ENTERO .)
    ENTERO          reduce using rule 67 (elemento -> ENTERO .)
    REAL            reduce using rule 67 (elemento -> ENTERO .)
    CARACTER        reduce using rule 67 (elemento -> ENTERO .)
    PE              reduce using rule 67 (elemento -> ENTERO .)
    NOT             reduce using rule 67 (elemento -> ENTERO .)
    SEN             reduce using rule 67 (elemento -> ENTERO .)
    COS             reduce using rule 67 (elemento -> ENTERO .)
    EXP             reduce using rule 67 (elemento -> ENTERO .)
    LOG             reduce using rule 67 (elemento -> ENTERO .)
    TRUE            reduce using rule 67 (elemento -> ENTERO .)
    FALSE           reduce using rule 67 (elemento -> ENTERO .)
    $end            reduce using rule 67 (elemento -> ENTERO .)
    LLE             reduce using rule 67 (elemento -> ENTERO .)
    PA              reduce using rule 67 (elemento -> ENTERO .)
    COMA            reduce using rule 67 (elemento -> ENTERO .)
    LLA             reduce using rule 67 (elemento -> ENTERO .)


state 7

    (14) expresion -> tipo . lista_declaraciones
    (6) lista_declaraciones -> . declaracion
    (7) lista_declaraciones -> . lista_declaraciones COMA declaracion
    (8) declaracion -> . ID
    (9) declaracion -> . ID EQ expresion
    (10) declaracion -> . CE ENTERO CA ID

    ID              shift and go to state 43
    CE              shift and go to state 44

    lista_declaraciones            shift and go to state 41
    declaracion                    shift and go to state 42

state 8

    (16) expresion -> TYPE . ID DPNTO grupo_apertura bloque_propiedades grupo_cierre

    ID              shift and go to state 45


state 9

    (29) expresion -> ids .

    NEWLINE         reduce using rule 29 (expresion -> ids .)
    OR              reduce using rule 29 (expresion -> ids .)
    ID              reduce using rule 29 (expresion -> ids .)
    TYPE            reduce using rule 29 (expresion -> ids .)
    IF              reduce using rule 29 (expresion -> ids .)
    WHILE           reduce using rule 29 (expresion -> ids .)
    INT             reduce using rule 29 (expresion -> ids .)
    FLOAT           reduce using rule 29 (expresion -> ids .)
    BOOL            reduce using rule 29 (expresion -> ids .)
    CHAR            reduce using rule 29 (expresion -> ids .)
    ENTERO          reduce using rule 29 (expresion -> ids .)
    REAL            reduce using rule 29 (expresion -> ids .)
    CARACTER        reduce using rule 29 (expresion -> ids .)
    PE              reduce using rule 29 (expresion -> ids .)
    RES             reduce using rule 29 (expresion -> ids .)
    NOT             reduce using rule 29 (expresion -> ids .)
    SEN             reduce using rule 29 (expresion -> ids .)
    COS             reduce using rule 29 (expresion -> ids .)
    EXP             reduce using rule 29 (expresion -> ids .)
    LOG             reduce using rule 29 (expresion -> ids .)
    TRUE            reduce using rule 29 (expresion -> ids .)
    FALSE           reduce using rule 29 (expresion -> ids .)
    $end            reduce using rule 29 (expresion -> ids .)
    LLE             reduce using rule 29 (expresion -> ids .)
    PA              reduce using rule 29 (expresion -> ids .)
    COMA            reduce using rule 29 (expresion -> ids .)
    LLA             reduce using rule 29 (expresion -> ids .)


state 10

    (34) expresion -> IF . expresion bloque
    (35) expresion -> IF . expresion bloque ELSE bloque
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 46
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 11

    (36) expresion -> WHILE . expresion bloque
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 47
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 12

    (50) expresion -> expresion_logica .
    (51) expresion_logica -> expresion_logica . AND expresion_relacional

    NEWLINE         reduce using rule 50 (expresion -> expresion_logica .)
    OR              reduce using rule 50 (expresion -> expresion_logica .)
    ID              reduce using rule 50 (expresion -> expresion_logica .)
    TYPE            reduce using rule 50 (expresion -> expresion_logica .)
    IF              reduce using rule 50 (expresion -> expresion_logica .)
    WHILE           reduce using rule 50 (expresion -> expresion_logica .)
    INT             reduce using rule 50 (expresion -> expresion_logica .)
    FLOAT           reduce using rule 50 (expresion -> expresion_logica .)
    BOOL            reduce using rule 50 (expresion -> expresion_logica .)
    CHAR            reduce using rule 50 (expresion -> expresion_logica .)
    ENTERO          reduce using rule 50 (expresion -> expresion_logica .)
    REAL            reduce using rule 50 (expresion -> expresion_logica .)
    CARACTER        reduce using rule 50 (expresion -> expresion_logica .)
    PE              reduce using rule 50 (expresion -> expresion_logica .)
    RES             reduce using rule 50 (expresion -> expresion_logica .)
    NOT             reduce using rule 50 (expresion -> expresion_logica .)
    SEN             reduce using rule 50 (expresion -> expresion_logica .)
    COS             reduce using rule 50 (expresion -> expresion_logica .)
    EXP             reduce using rule 50 (expresion -> expresion_logica .)
    LOG             reduce using rule 50 (expresion -> expresion_logica .)
    TRUE            reduce using rule 50 (expresion -> expresion_logica .)
    FALSE           reduce using rule 50 (expresion -> expresion_logica .)
    $end            reduce using rule 50 (expresion -> expresion_logica .)
    LLE             reduce using rule 50 (expresion -> expresion_logica .)
    PA              reduce using rule 50 (expresion -> expresion_logica .)
    COMA            reduce using rule 50 (expresion -> expresion_logica .)
    LLA             reduce using rule 50 (expresion -> expresion_logica .)
    AND             shift and go to state 48


state 13

    (45) tipo -> tipo_base .
    (46) tipo -> tipo_base . CE ENTERO CA

  ! shift/reduce conflict for CE resolved as shift
    ID              reduce using rule 45 (tipo -> tipo_base .)
    CE              shift and go to state 49

  ! CE              [ reduce using rule 45 (tipo -> tipo_base .) ]


state 14

    (52) expresion_logica -> expresion_relacional .

    AND             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    NEWLINE         reduce using rule 52 (expresion_logica -> expresion_relacional .)
    OR              reduce using rule 52 (expresion_logica -> expresion_relacional .)
    ID              reduce using rule 52 (expresion_logica -> expresion_relacional .)
    TYPE            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    IF              reduce using rule 52 (expresion_logica -> expresion_relacional .)
    WHILE           reduce using rule 52 (expresion_logica -> expresion_relacional .)
    INT             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    FLOAT           reduce using rule 52 (expresion_logica -> expresion_relacional .)
    BOOL            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    CHAR            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    ENTERO          reduce using rule 52 (expresion_logica -> expresion_relacional .)
    REAL            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    CARACTER        reduce using rule 52 (expresion_logica -> expresion_relacional .)
    PE              reduce using rule 52 (expresion_logica -> expresion_relacional .)
    RES             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    NOT             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    SEN             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    COS             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    EXP             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    LOG             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    TRUE            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    FALSE           reduce using rule 52 (expresion_logica -> expresion_relacional .)
    $end            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    LLE             reduce using rule 52 (expresion_logica -> expresion_relacional .)
    PA              reduce using rule 52 (expresion_logica -> expresion_relacional .)
    COMA            reduce using rule 52 (expresion_logica -> expresion_relacional .)
    LLA             reduce using rule 52 (expresion_logica -> expresion_relacional .)


state 15

    (41) tipo_base -> INT .

    CE              reduce using rule 41 (tipo_base -> INT .)
    ID              reduce using rule 41 (tipo_base -> INT .)


state 16

    (42) tipo_base -> FLOAT .

    CE              reduce using rule 42 (tipo_base -> FLOAT .)
    ID              reduce using rule 42 (tipo_base -> FLOAT .)


state 17

    (43) tipo_base -> BOOL .

    CE              reduce using rule 43 (tipo_base -> BOOL .)
    ID              reduce using rule 43 (tipo_base -> BOOL .)


state 18

    (44) tipo_base -> CHAR .

    CE              reduce using rule 44 (tipo_base -> CHAR .)
    ID              reduce using rule 44 (tipo_base -> CHAR .)


state 19

    (53) expresion_relacional -> termino_aritmetico . I termino_aritmetico
    (54) expresion_relacional -> termino_aritmetico . M termino_aritmetico
    (55) expresion_relacional -> termino_aritmetico . m termino_aritmetico
    (56) expresion_relacional -> termino_aritmetico . MI termino_aritmetico
    (57) expresion_relacional -> termino_aritmetico . mI termino_aritmetico
    (58) expresion_relacional -> termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

  ! shift/reduce conflict for RES resolved as shift
    I               shift and go to state 50
    M               shift and go to state 51
    m               shift and go to state 52
    MI              shift and go to state 53
    mI              shift and go to state 54
    AND             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    NEWLINE         reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    OR              reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    ID              reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    TYPE            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    IF              reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    WHILE           reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    INT             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    FLOAT           reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    BOOL            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    CHAR            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    ENTERO          reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    REAL            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    CARACTER        reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    PE              reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    NOT             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    SEN             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    COS             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    EXP             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    LOG             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    TRUE            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    FALSE           reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    $end            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    LLE             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    PA              reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    COMA            reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    LLA             reduce using rule 58 (expresion_relacional -> termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 58 (expresion_relacional -> termino_aritmetico .) ]


state 20

    (61) termino_aritmetico -> factor .
    (62) factor -> factor . MUL elemento
    (63) factor -> factor . DIV elemento

    I               reduce using rule 61 (termino_aritmetico -> factor .)
    M               reduce using rule 61 (termino_aritmetico -> factor .)
    m               reduce using rule 61 (termino_aritmetico -> factor .)
    MI              reduce using rule 61 (termino_aritmetico -> factor .)
    mI              reduce using rule 61 (termino_aritmetico -> factor .)
    SUM             reduce using rule 61 (termino_aritmetico -> factor .)
    RES             reduce using rule 61 (termino_aritmetico -> factor .)
    AND             reduce using rule 61 (termino_aritmetico -> factor .)
    NEWLINE         reduce using rule 61 (termino_aritmetico -> factor .)
    OR              reduce using rule 61 (termino_aritmetico -> factor .)
    ID              reduce using rule 61 (termino_aritmetico -> factor .)
    TYPE            reduce using rule 61 (termino_aritmetico -> factor .)
    IF              reduce using rule 61 (termino_aritmetico -> factor .)
    WHILE           reduce using rule 61 (termino_aritmetico -> factor .)
    INT             reduce using rule 61 (termino_aritmetico -> factor .)
    FLOAT           reduce using rule 61 (termino_aritmetico -> factor .)
    BOOL            reduce using rule 61 (termino_aritmetico -> factor .)
    CHAR            reduce using rule 61 (termino_aritmetico -> factor .)
    ENTERO          reduce using rule 61 (termino_aritmetico -> factor .)
    REAL            reduce using rule 61 (termino_aritmetico -> factor .)
    CARACTER        reduce using rule 61 (termino_aritmetico -> factor .)
    PE              reduce using rule 61 (termino_aritmetico -> factor .)
    NOT             reduce using rule 61 (termino_aritmetico -> factor .)
    SEN             reduce using rule 61 (termino_aritmetico -> factor .)
    COS             reduce using rule 61 (termino_aritmetico -> factor .)
    EXP             reduce using rule 61 (termino_aritmetico -> factor .)
    LOG             reduce using rule 61 (termino_aritmetico -> factor .)
    TRUE            reduce using rule 61 (termino_aritmetico -> factor .)
    FALSE           reduce using rule 61 (termino_aritmetico -> factor .)
    $end            reduce using rule 61 (termino_aritmetico -> factor .)
    LLE             reduce using rule 61 (termino_aritmetico -> factor .)
    PA              reduce using rule 61 (termino_aritmetico -> factor .)
    COMA            reduce using rule 61 (termino_aritmetico -> factor .)
    LLA             reduce using rule 61 (termino_aritmetico -> factor .)
    MUL             shift and go to state 57
    DIV             shift and go to state 58


state 21

    (73) elemento -> RES . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    elemento                       shift and go to state 59
    booleano                       shift and go to state 24

state 22

    (64) factor -> elemento .

    MUL             reduce using rule 64 (factor -> elemento .)
    DIV             reduce using rule 64 (factor -> elemento .)
    I               reduce using rule 64 (factor -> elemento .)
    M               reduce using rule 64 (factor -> elemento .)
    m               reduce using rule 64 (factor -> elemento .)
    MI              reduce using rule 64 (factor -> elemento .)
    mI              reduce using rule 64 (factor -> elemento .)
    SUM             reduce using rule 64 (factor -> elemento .)
    RES             reduce using rule 64 (factor -> elemento .)
    AND             reduce using rule 64 (factor -> elemento .)
    NEWLINE         reduce using rule 64 (factor -> elemento .)
    OR              reduce using rule 64 (factor -> elemento .)
    ID              reduce using rule 64 (factor -> elemento .)
    TYPE            reduce using rule 64 (factor -> elemento .)
    IF              reduce using rule 64 (factor -> elemento .)
    WHILE           reduce using rule 64 (factor -> elemento .)
    INT             reduce using rule 64 (factor -> elemento .)
    FLOAT           reduce using rule 64 (factor -> elemento .)
    BOOL            reduce using rule 64 (factor -> elemento .)
    CHAR            reduce using rule 64 (factor -> elemento .)
    ENTERO          reduce using rule 64 (factor -> elemento .)
    REAL            reduce using rule 64 (factor -> elemento .)
    CARACTER        reduce using rule 64 (factor -> elemento .)
    PE              reduce using rule 64 (factor -> elemento .)
    NOT             reduce using rule 64 (factor -> elemento .)
    SEN             reduce using rule 64 (factor -> elemento .)
    COS             reduce using rule 64 (factor -> elemento .)
    EXP             reduce using rule 64 (factor -> elemento .)
    LOG             reduce using rule 64 (factor -> elemento .)
    TRUE            reduce using rule 64 (factor -> elemento .)
    FALSE           reduce using rule 64 (factor -> elemento .)
    $end            reduce using rule 64 (factor -> elemento .)
    LLE             reduce using rule 64 (factor -> elemento .)
    PA              reduce using rule 64 (factor -> elemento .)
    COMA            reduce using rule 64 (factor -> elemento .)
    LLA             reduce using rule 64 (factor -> elemento .)


state 23

    (68) elemento -> REAL .

    MUL             reduce using rule 68 (elemento -> REAL .)
    DIV             reduce using rule 68 (elemento -> REAL .)
    I               reduce using rule 68 (elemento -> REAL .)
    M               reduce using rule 68 (elemento -> REAL .)
    m               reduce using rule 68 (elemento -> REAL .)
    MI              reduce using rule 68 (elemento -> REAL .)
    mI              reduce using rule 68 (elemento -> REAL .)
    SUM             reduce using rule 68 (elemento -> REAL .)
    RES             reduce using rule 68 (elemento -> REAL .)
    AND             reduce using rule 68 (elemento -> REAL .)
    NEWLINE         reduce using rule 68 (elemento -> REAL .)
    OR              reduce using rule 68 (elemento -> REAL .)
    ID              reduce using rule 68 (elemento -> REAL .)
    TYPE            reduce using rule 68 (elemento -> REAL .)
    IF              reduce using rule 68 (elemento -> REAL .)
    WHILE           reduce using rule 68 (elemento -> REAL .)
    INT             reduce using rule 68 (elemento -> REAL .)
    FLOAT           reduce using rule 68 (elemento -> REAL .)
    BOOL            reduce using rule 68 (elemento -> REAL .)
    CHAR            reduce using rule 68 (elemento -> REAL .)
    ENTERO          reduce using rule 68 (elemento -> REAL .)
    REAL            reduce using rule 68 (elemento -> REAL .)
    CARACTER        reduce using rule 68 (elemento -> REAL .)
    PE              reduce using rule 68 (elemento -> REAL .)
    NOT             reduce using rule 68 (elemento -> REAL .)
    SEN             reduce using rule 68 (elemento -> REAL .)
    COS             reduce using rule 68 (elemento -> REAL .)
    EXP             reduce using rule 68 (elemento -> REAL .)
    LOG             reduce using rule 68 (elemento -> REAL .)
    TRUE            reduce using rule 68 (elemento -> REAL .)
    FALSE           reduce using rule 68 (elemento -> REAL .)
    $end            reduce using rule 68 (elemento -> REAL .)
    LLE             reduce using rule 68 (elemento -> REAL .)
    PA              reduce using rule 68 (elemento -> REAL .)
    COMA            reduce using rule 68 (elemento -> REAL .)
    LLA             reduce using rule 68 (elemento -> REAL .)


state 24

    (69) elemento -> booleano .

    MUL             reduce using rule 69 (elemento -> booleano .)
    DIV             reduce using rule 69 (elemento -> booleano .)
    I               reduce using rule 69 (elemento -> booleano .)
    M               reduce using rule 69 (elemento -> booleano .)
    m               reduce using rule 69 (elemento -> booleano .)
    MI              reduce using rule 69 (elemento -> booleano .)
    mI              reduce using rule 69 (elemento -> booleano .)
    SUM             reduce using rule 69 (elemento -> booleano .)
    RES             reduce using rule 69 (elemento -> booleano .)
    AND             reduce using rule 69 (elemento -> booleano .)
    NEWLINE         reduce using rule 69 (elemento -> booleano .)
    OR              reduce using rule 69 (elemento -> booleano .)
    ID              reduce using rule 69 (elemento -> booleano .)
    TYPE            reduce using rule 69 (elemento -> booleano .)
    IF              reduce using rule 69 (elemento -> booleano .)
    WHILE           reduce using rule 69 (elemento -> booleano .)
    INT             reduce using rule 69 (elemento -> booleano .)
    FLOAT           reduce using rule 69 (elemento -> booleano .)
    BOOL            reduce using rule 69 (elemento -> booleano .)
    CHAR            reduce using rule 69 (elemento -> booleano .)
    ENTERO          reduce using rule 69 (elemento -> booleano .)
    REAL            reduce using rule 69 (elemento -> booleano .)
    CARACTER        reduce using rule 69 (elemento -> booleano .)
    PE              reduce using rule 69 (elemento -> booleano .)
    NOT             reduce using rule 69 (elemento -> booleano .)
    SEN             reduce using rule 69 (elemento -> booleano .)
    COS             reduce using rule 69 (elemento -> booleano .)
    EXP             reduce using rule 69 (elemento -> booleano .)
    LOG             reduce using rule 69 (elemento -> booleano .)
    TRUE            reduce using rule 69 (elemento -> booleano .)
    FALSE           reduce using rule 69 (elemento -> booleano .)
    $end            reduce using rule 69 (elemento -> booleano .)
    LLE             reduce using rule 69 (elemento -> booleano .)
    PA              reduce using rule 69 (elemento -> booleano .)
    COMA            reduce using rule 69 (elemento -> booleano .)
    LLA             reduce using rule 69 (elemento -> booleano .)


state 25

    (70) elemento -> CARACTER .

    MUL             reduce using rule 70 (elemento -> CARACTER .)
    DIV             reduce using rule 70 (elemento -> CARACTER .)
    I               reduce using rule 70 (elemento -> CARACTER .)
    M               reduce using rule 70 (elemento -> CARACTER .)
    m               reduce using rule 70 (elemento -> CARACTER .)
    MI              reduce using rule 70 (elemento -> CARACTER .)
    mI              reduce using rule 70 (elemento -> CARACTER .)
    SUM             reduce using rule 70 (elemento -> CARACTER .)
    RES             reduce using rule 70 (elemento -> CARACTER .)
    AND             reduce using rule 70 (elemento -> CARACTER .)
    NEWLINE         reduce using rule 70 (elemento -> CARACTER .)
    OR              reduce using rule 70 (elemento -> CARACTER .)
    ID              reduce using rule 70 (elemento -> CARACTER .)
    TYPE            reduce using rule 70 (elemento -> CARACTER .)
    IF              reduce using rule 70 (elemento -> CARACTER .)
    WHILE           reduce using rule 70 (elemento -> CARACTER .)
    INT             reduce using rule 70 (elemento -> CARACTER .)
    FLOAT           reduce using rule 70 (elemento -> CARACTER .)
    BOOL            reduce using rule 70 (elemento -> CARACTER .)
    CHAR            reduce using rule 70 (elemento -> CARACTER .)
    ENTERO          reduce using rule 70 (elemento -> CARACTER .)
    REAL            reduce using rule 70 (elemento -> CARACTER .)
    CARACTER        reduce using rule 70 (elemento -> CARACTER .)
    PE              reduce using rule 70 (elemento -> CARACTER .)
    NOT             reduce using rule 70 (elemento -> CARACTER .)
    SEN             reduce using rule 70 (elemento -> CARACTER .)
    COS             reduce using rule 70 (elemento -> CARACTER .)
    EXP             reduce using rule 70 (elemento -> CARACTER .)
    LOG             reduce using rule 70 (elemento -> CARACTER .)
    TRUE            reduce using rule 70 (elemento -> CARACTER .)
    FALSE           reduce using rule 70 (elemento -> CARACTER .)
    $end            reduce using rule 70 (elemento -> CARACTER .)
    LLE             reduce using rule 70 (elemento -> CARACTER .)
    PA              reduce using rule 70 (elemento -> CARACTER .)
    COMA            reduce using rule 70 (elemento -> CARACTER .)
    LLA             reduce using rule 70 (elemento -> CARACTER .)


state 26

    (72) elemento -> PE . expresion PA
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 61
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 27

    (74) elemento -> NOT . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    elemento                       shift and go to state 62
    booleano                       shift and go to state 24

state 28

    (75) elemento -> SEN . PE expresion PA

    PE              shift and go to state 63


state 29

    (76) elemento -> COS . PE expresion PA

    PE              shift and go to state 64


state 30

    (77) elemento -> EXP . PE expresion PA

    PE              shift and go to state 65


state 31

    (78) elemento -> LOG . PE expresion PA

    PE              shift and go to state 66


state 32

    (65) booleano -> TRUE .

    MUL             reduce using rule 65 (booleano -> TRUE .)
    DIV             reduce using rule 65 (booleano -> TRUE .)
    I               reduce using rule 65 (booleano -> TRUE .)
    M               reduce using rule 65 (booleano -> TRUE .)
    m               reduce using rule 65 (booleano -> TRUE .)
    MI              reduce using rule 65 (booleano -> TRUE .)
    mI              reduce using rule 65 (booleano -> TRUE .)
    SUM             reduce using rule 65 (booleano -> TRUE .)
    RES             reduce using rule 65 (booleano -> TRUE .)
    AND             reduce using rule 65 (booleano -> TRUE .)
    NEWLINE         reduce using rule 65 (booleano -> TRUE .)
    OR              reduce using rule 65 (booleano -> TRUE .)
    ID              reduce using rule 65 (booleano -> TRUE .)
    TYPE            reduce using rule 65 (booleano -> TRUE .)
    IF              reduce using rule 65 (booleano -> TRUE .)
    WHILE           reduce using rule 65 (booleano -> TRUE .)
    INT             reduce using rule 65 (booleano -> TRUE .)
    FLOAT           reduce using rule 65 (booleano -> TRUE .)
    BOOL            reduce using rule 65 (booleano -> TRUE .)
    CHAR            reduce using rule 65 (booleano -> TRUE .)
    ENTERO          reduce using rule 65 (booleano -> TRUE .)
    REAL            reduce using rule 65 (booleano -> TRUE .)
    CARACTER        reduce using rule 65 (booleano -> TRUE .)
    PE              reduce using rule 65 (booleano -> TRUE .)
    NOT             reduce using rule 65 (booleano -> TRUE .)
    SEN             reduce using rule 65 (booleano -> TRUE .)
    COS             reduce using rule 65 (booleano -> TRUE .)
    EXP             reduce using rule 65 (booleano -> TRUE .)
    LOG             reduce using rule 65 (booleano -> TRUE .)
    TRUE            reduce using rule 65 (booleano -> TRUE .)
    FALSE           reduce using rule 65 (booleano -> TRUE .)
    $end            reduce using rule 65 (booleano -> TRUE .)
    LLE             reduce using rule 65 (booleano -> TRUE .)
    PA              reduce using rule 65 (booleano -> TRUE .)
    COMA            reduce using rule 65 (booleano -> TRUE .)
    LLA             reduce using rule 65 (booleano -> TRUE .)


state 33

    (66) booleano -> FALSE .

    MUL             reduce using rule 66 (booleano -> FALSE .)
    DIV             reduce using rule 66 (booleano -> FALSE .)
    I               reduce using rule 66 (booleano -> FALSE .)
    M               reduce using rule 66 (booleano -> FALSE .)
    m               reduce using rule 66 (booleano -> FALSE .)
    MI              reduce using rule 66 (booleano -> FALSE .)
    mI              reduce using rule 66 (booleano -> FALSE .)
    SUM             reduce using rule 66 (booleano -> FALSE .)
    RES             reduce using rule 66 (booleano -> FALSE .)
    AND             reduce using rule 66 (booleano -> FALSE .)
    NEWLINE         reduce using rule 66 (booleano -> FALSE .)
    OR              reduce using rule 66 (booleano -> FALSE .)
    ID              reduce using rule 66 (booleano -> FALSE .)
    TYPE            reduce using rule 66 (booleano -> FALSE .)
    IF              reduce using rule 66 (booleano -> FALSE .)
    WHILE           reduce using rule 66 (booleano -> FALSE .)
    INT             reduce using rule 66 (booleano -> FALSE .)
    FLOAT           reduce using rule 66 (booleano -> FALSE .)
    BOOL            reduce using rule 66 (booleano -> FALSE .)
    CHAR            reduce using rule 66 (booleano -> FALSE .)
    ENTERO          reduce using rule 66 (booleano -> FALSE .)
    REAL            reduce using rule 66 (booleano -> FALSE .)
    CARACTER        reduce using rule 66 (booleano -> FALSE .)
    PE              reduce using rule 66 (booleano -> FALSE .)
    NOT             reduce using rule 66 (booleano -> FALSE .)
    SEN             reduce using rule 66 (booleano -> FALSE .)
    COS             reduce using rule 66 (booleano -> FALSE .)
    EXP             reduce using rule 66 (booleano -> FALSE .)
    LOG             reduce using rule 66 (booleano -> FALSE .)
    TRUE            reduce using rule 66 (booleano -> FALSE .)
    FALSE           reduce using rule 66 (booleano -> FALSE .)
    $end            reduce using rule 66 (booleano -> FALSE .)
    LLE             reduce using rule 66 (booleano -> FALSE .)
    PA              reduce using rule 66 (booleano -> FALSE .)
    COMA            reduce using rule 66 (booleano -> FALSE .)
    LLA             reduce using rule 66 (booleano -> FALSE .)


state 34

    (1) programa -> linea programa .

    $end            reduce using rule 1 (programa -> linea programa .)


state 35

    (3) linea -> expresion NEWLINE .

    NEWLINE         reduce using rule 3 (linea -> expresion NEWLINE .)
    ID              reduce using rule 3 (linea -> expresion NEWLINE .)
    TYPE            reduce using rule 3 (linea -> expresion NEWLINE .)
    IF              reduce using rule 3 (linea -> expresion NEWLINE .)
    WHILE           reduce using rule 3 (linea -> expresion NEWLINE .)
    INT             reduce using rule 3 (linea -> expresion NEWLINE .)
    FLOAT           reduce using rule 3 (linea -> expresion NEWLINE .)
    BOOL            reduce using rule 3 (linea -> expresion NEWLINE .)
    CHAR            reduce using rule 3 (linea -> expresion NEWLINE .)
    ENTERO          reduce using rule 3 (linea -> expresion NEWLINE .)
    REAL            reduce using rule 3 (linea -> expresion NEWLINE .)
    CARACTER        reduce using rule 3 (linea -> expresion NEWLINE .)
    PE              reduce using rule 3 (linea -> expresion NEWLINE .)
    RES             reduce using rule 3 (linea -> expresion NEWLINE .)
    NOT             reduce using rule 3 (linea -> expresion NEWLINE .)
    SEN             reduce using rule 3 (linea -> expresion NEWLINE .)
    COS             reduce using rule 3 (linea -> expresion NEWLINE .)
    EXP             reduce using rule 3 (linea -> expresion NEWLINE .)
    LOG             reduce using rule 3 (linea -> expresion NEWLINE .)
    TRUE            reduce using rule 3 (linea -> expresion NEWLINE .)
    FALSE           reduce using rule 3 (linea -> expresion NEWLINE .)
    $end            reduce using rule 3 (linea -> expresion NEWLINE .)


state 36

    (49) expresion -> expresion OR . expresion_logica
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion_logica               shift and go to state 67
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 37

    (30) ids -> ID ID .

    NEWLINE         reduce using rule 30 (ids -> ID ID .)
    OR              reduce using rule 30 (ids -> ID ID .)
    ID              reduce using rule 30 (ids -> ID ID .)
    TYPE            reduce using rule 30 (ids -> ID ID .)
    IF              reduce using rule 30 (ids -> ID ID .)
    WHILE           reduce using rule 30 (ids -> ID ID .)
    INT             reduce using rule 30 (ids -> ID ID .)
    FLOAT           reduce using rule 30 (ids -> ID ID .)
    BOOL            reduce using rule 30 (ids -> ID ID .)
    CHAR            reduce using rule 30 (ids -> ID ID .)
    ENTERO          reduce using rule 30 (ids -> ID ID .)
    REAL            reduce using rule 30 (ids -> ID ID .)
    CARACTER        reduce using rule 30 (ids -> ID ID .)
    PE              reduce using rule 30 (ids -> ID ID .)
    RES             reduce using rule 30 (ids -> ID ID .)
    NOT             reduce using rule 30 (ids -> ID ID .)
    SEN             reduce using rule 30 (ids -> ID ID .)
    COS             reduce using rule 30 (ids -> ID ID .)
    EXP             reduce using rule 30 (ids -> ID ID .)
    LOG             reduce using rule 30 (ids -> ID ID .)
    TRUE            reduce using rule 30 (ids -> ID ID .)
    FALSE           reduce using rule 30 (ids -> ID ID .)
    $end            reduce using rule 30 (ids -> ID ID .)
    LLE             reduce using rule 30 (ids -> ID ID .)
    PA              reduce using rule 30 (ids -> ID ID .)
    COMA            reduce using rule 30 (ids -> ID ID .)
    LLA             reduce using rule 30 (ids -> ID ID .)


state 38

    (11) expresion -> ID PNTO . LEN
    (31) expresion -> ID PNTO . ID
    (32) expresion -> ID PNTO . ID EQ expresion

    LEN             shift and go to state 69
    ID              shift and go to state 68


state 39

    (13) expresion -> ID CE . ENTERO CA EQ expresion
    (33) expresion -> ID CE . ENTERO CA PNTO ID
    (48) tipo -> ID CE . ENTERO CA
    (12) elemento -> ID CE . ENTERO CA

    ENTERO          shift and go to state 70


state 40

    (15) expresion -> ID EQ . expresion
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 71
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 41

    (14) expresion -> tipo lista_declaraciones .
    (7) lista_declaraciones -> lista_declaraciones . COMA declaracion

  ! shift/reduce conflict for COMA resolved as shift
    NEWLINE         reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    OR              reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    ID              reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    TYPE            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    IF              reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    WHILE           reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    INT             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    FLOAT           reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    BOOL            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    CHAR            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    ENTERO          reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    REAL            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    CARACTER        reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    PE              reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    RES             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    NOT             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    SEN             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    COS             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    EXP             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    LOG             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    TRUE            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    FALSE           reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    $end            reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    LLE             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    PA              reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    LLA             reduce using rule 14 (expresion -> tipo lista_declaraciones .)
    COMA            shift and go to state 72

  ! COMA            [ reduce using rule 14 (expresion -> tipo lista_declaraciones .) ]


state 42

    (6) lista_declaraciones -> declaracion .

    COMA            reduce using rule 6 (lista_declaraciones -> declaracion .)
    NEWLINE         reduce using rule 6 (lista_declaraciones -> declaracion .)
    OR              reduce using rule 6 (lista_declaraciones -> declaracion .)
    ID              reduce using rule 6 (lista_declaraciones -> declaracion .)
    TYPE            reduce using rule 6 (lista_declaraciones -> declaracion .)
    IF              reduce using rule 6 (lista_declaraciones -> declaracion .)
    WHILE           reduce using rule 6 (lista_declaraciones -> declaracion .)
    INT             reduce using rule 6 (lista_declaraciones -> declaracion .)
    FLOAT           reduce using rule 6 (lista_declaraciones -> declaracion .)
    BOOL            reduce using rule 6 (lista_declaraciones -> declaracion .)
    CHAR            reduce using rule 6 (lista_declaraciones -> declaracion .)
    ENTERO          reduce using rule 6 (lista_declaraciones -> declaracion .)
    REAL            reduce using rule 6 (lista_declaraciones -> declaracion .)
    CARACTER        reduce using rule 6 (lista_declaraciones -> declaracion .)
    PE              reduce using rule 6 (lista_declaraciones -> declaracion .)
    RES             reduce using rule 6 (lista_declaraciones -> declaracion .)
    NOT             reduce using rule 6 (lista_declaraciones -> declaracion .)
    SEN             reduce using rule 6 (lista_declaraciones -> declaracion .)
    COS             reduce using rule 6 (lista_declaraciones -> declaracion .)
    EXP             reduce using rule 6 (lista_declaraciones -> declaracion .)
    LOG             reduce using rule 6 (lista_declaraciones -> declaracion .)
    TRUE            reduce using rule 6 (lista_declaraciones -> declaracion .)
    FALSE           reduce using rule 6 (lista_declaraciones -> declaracion .)
    $end            reduce using rule 6 (lista_declaraciones -> declaracion .)
    LLE             reduce using rule 6 (lista_declaraciones -> declaracion .)
    PA              reduce using rule 6 (lista_declaraciones -> declaracion .)
    LLA             reduce using rule 6 (lista_declaraciones -> declaracion .)


state 43

    (8) declaracion -> ID .
    (9) declaracion -> ID . EQ expresion

    COMA            reduce using rule 8 (declaracion -> ID .)
    NEWLINE         reduce using rule 8 (declaracion -> ID .)
    OR              reduce using rule 8 (declaracion -> ID .)
    ID              reduce using rule 8 (declaracion -> ID .)
    TYPE            reduce using rule 8 (declaracion -> ID .)
    IF              reduce using rule 8 (declaracion -> ID .)
    WHILE           reduce using rule 8 (declaracion -> ID .)
    INT             reduce using rule 8 (declaracion -> ID .)
    FLOAT           reduce using rule 8 (declaracion -> ID .)
    BOOL            reduce using rule 8 (declaracion -> ID .)
    CHAR            reduce using rule 8 (declaracion -> ID .)
    ENTERO          reduce using rule 8 (declaracion -> ID .)
    REAL            reduce using rule 8 (declaracion -> ID .)
    CARACTER        reduce using rule 8 (declaracion -> ID .)
    PE              reduce using rule 8 (declaracion -> ID .)
    RES             reduce using rule 8 (declaracion -> ID .)
    NOT             reduce using rule 8 (declaracion -> ID .)
    SEN             reduce using rule 8 (declaracion -> ID .)
    COS             reduce using rule 8 (declaracion -> ID .)
    EXP             reduce using rule 8 (declaracion -> ID .)
    LOG             reduce using rule 8 (declaracion -> ID .)
    TRUE            reduce using rule 8 (declaracion -> ID .)
    FALSE           reduce using rule 8 (declaracion -> ID .)
    $end            reduce using rule 8 (declaracion -> ID .)
    LLE             reduce using rule 8 (declaracion -> ID .)
    PA              reduce using rule 8 (declaracion -> ID .)
    LLA             reduce using rule 8 (declaracion -> ID .)
    EQ              shift and go to state 73


state 44

    (10) declaracion -> CE . ENTERO CA ID

    ENTERO          shift and go to state 74


state 45

    (16) expresion -> TYPE ID . DPNTO grupo_apertura bloque_propiedades grupo_cierre

    DPNTO           shift and go to state 75


state 46

    (34) expresion -> IF expresion . bloque
    (35) expresion -> IF expresion . bloque ELSE bloque
    (49) expresion -> expresion . OR expresion_logica
    (37) bloque -> . grupo_apertura expresiones grupo_cierre
    (17) grupo_apertura -> . opt_newline LLE opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    OR              shift and go to state 36
    NEWLINE         shift and go to state 79
    LLE             reduce using rule 20 (opt_newline -> .)

    bloque                         shift and go to state 76
    grupo_apertura                 shift and go to state 77
    opt_newline                    shift and go to state 78

state 47

    (36) expresion -> WHILE expresion . bloque
    (49) expresion -> expresion . OR expresion_logica
    (37) bloque -> . grupo_apertura expresiones grupo_cierre
    (17) grupo_apertura -> . opt_newline LLE opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    OR              shift and go to state 36
    NEWLINE         shift and go to state 79
    LLE             reduce using rule 20 (opt_newline -> .)

    bloque                         shift and go to state 80
    grupo_apertura                 shift and go to state 77
    opt_newline                    shift and go to state 78

state 48

    (51) expresion_logica -> expresion_logica AND . expresion_relacional
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion_relacional           shift and go to state 81
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 49

    (46) tipo -> tipo_base CE . ENTERO CA

    ENTERO          shift and go to state 82


state 50

    (53) expresion_relacional -> termino_aritmetico I . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    termino_aritmetico             shift and go to state 83
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 51

    (54) expresion_relacional -> termino_aritmetico M . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    termino_aritmetico             shift and go to state 84
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 52

    (55) expresion_relacional -> termino_aritmetico m . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    termino_aritmetico             shift and go to state 85
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 53

    (56) expresion_relacional -> termino_aritmetico MI . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    termino_aritmetico             shift and go to state 86
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 54

    (57) expresion_relacional -> termino_aritmetico mI . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    termino_aritmetico             shift and go to state 87
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 55

    (59) termino_aritmetico -> termino_aritmetico SUM . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    factor                         shift and go to state 88
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 56

    (60) termino_aritmetico -> termino_aritmetico RES . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    factor                         shift and go to state 89
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 57

    (62) factor -> factor MUL . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    elemento                       shift and go to state 90
    booleano                       shift and go to state 24

state 58

    (63) factor -> factor DIV . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 60
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    elemento                       shift and go to state 91
    booleano                       shift and go to state 24

state 59

    (73) elemento -> RES elemento .

    MUL             reduce using rule 73 (elemento -> RES elemento .)
    DIV             reduce using rule 73 (elemento -> RES elemento .)
    I               reduce using rule 73 (elemento -> RES elemento .)
    M               reduce using rule 73 (elemento -> RES elemento .)
    m               reduce using rule 73 (elemento -> RES elemento .)
    MI              reduce using rule 73 (elemento -> RES elemento .)
    mI              reduce using rule 73 (elemento -> RES elemento .)
    SUM             reduce using rule 73 (elemento -> RES elemento .)
    RES             reduce using rule 73 (elemento -> RES elemento .)
    AND             reduce using rule 73 (elemento -> RES elemento .)
    NEWLINE         reduce using rule 73 (elemento -> RES elemento .)
    OR              reduce using rule 73 (elemento -> RES elemento .)
    ID              reduce using rule 73 (elemento -> RES elemento .)
    TYPE            reduce using rule 73 (elemento -> RES elemento .)
    IF              reduce using rule 73 (elemento -> RES elemento .)
    WHILE           reduce using rule 73 (elemento -> RES elemento .)
    INT             reduce using rule 73 (elemento -> RES elemento .)
    FLOAT           reduce using rule 73 (elemento -> RES elemento .)
    BOOL            reduce using rule 73 (elemento -> RES elemento .)
    CHAR            reduce using rule 73 (elemento -> RES elemento .)
    ENTERO          reduce using rule 73 (elemento -> RES elemento .)
    REAL            reduce using rule 73 (elemento -> RES elemento .)
    CARACTER        reduce using rule 73 (elemento -> RES elemento .)
    PE              reduce using rule 73 (elemento -> RES elemento .)
    NOT             reduce using rule 73 (elemento -> RES elemento .)
    SEN             reduce using rule 73 (elemento -> RES elemento .)
    COS             reduce using rule 73 (elemento -> RES elemento .)
    EXP             reduce using rule 73 (elemento -> RES elemento .)
    LOG             reduce using rule 73 (elemento -> RES elemento .)
    TRUE            reduce using rule 73 (elemento -> RES elemento .)
    FALSE           reduce using rule 73 (elemento -> RES elemento .)
    $end            reduce using rule 73 (elemento -> RES elemento .)
    LLE             reduce using rule 73 (elemento -> RES elemento .)
    PA              reduce using rule 73 (elemento -> RES elemento .)
    COMA            reduce using rule 73 (elemento -> RES elemento .)
    LLA             reduce using rule 73 (elemento -> RES elemento .)


state 60

    (12) elemento -> ID . CE ENTERO CA
    (71) elemento -> ID .

    CE              shift and go to state 92
    MUL             reduce using rule 71 (elemento -> ID .)
    DIV             reduce using rule 71 (elemento -> ID .)
    I               reduce using rule 71 (elemento -> ID .)
    M               reduce using rule 71 (elemento -> ID .)
    m               reduce using rule 71 (elemento -> ID .)
    MI              reduce using rule 71 (elemento -> ID .)
    mI              reduce using rule 71 (elemento -> ID .)
    SUM             reduce using rule 71 (elemento -> ID .)
    RES             reduce using rule 71 (elemento -> ID .)
    AND             reduce using rule 71 (elemento -> ID .)
    NEWLINE         reduce using rule 71 (elemento -> ID .)
    OR              reduce using rule 71 (elemento -> ID .)
    ID              reduce using rule 71 (elemento -> ID .)
    TYPE            reduce using rule 71 (elemento -> ID .)
    IF              reduce using rule 71 (elemento -> ID .)
    WHILE           reduce using rule 71 (elemento -> ID .)
    INT             reduce using rule 71 (elemento -> ID .)
    FLOAT           reduce using rule 71 (elemento -> ID .)
    BOOL            reduce using rule 71 (elemento -> ID .)
    CHAR            reduce using rule 71 (elemento -> ID .)
    ENTERO          reduce using rule 71 (elemento -> ID .)
    REAL            reduce using rule 71 (elemento -> ID .)
    CARACTER        reduce using rule 71 (elemento -> ID .)
    PE              reduce using rule 71 (elemento -> ID .)
    NOT             reduce using rule 71 (elemento -> ID .)
    SEN             reduce using rule 71 (elemento -> ID .)
    COS             reduce using rule 71 (elemento -> ID .)
    EXP             reduce using rule 71 (elemento -> ID .)
    LOG             reduce using rule 71 (elemento -> ID .)
    TRUE            reduce using rule 71 (elemento -> ID .)
    FALSE           reduce using rule 71 (elemento -> ID .)
    $end            reduce using rule 71 (elemento -> ID .)
    LLE             reduce using rule 71 (elemento -> ID .)
    PA              reduce using rule 71 (elemento -> ID .)
    COMA            reduce using rule 71 (elemento -> ID .)
    LLA             reduce using rule 71 (elemento -> ID .)


state 61

    (72) elemento -> PE expresion . PA
    (49) expresion -> expresion . OR expresion_logica

    PA              shift and go to state 93
    OR              shift and go to state 36


state 62

    (74) elemento -> NOT elemento .

    MUL             reduce using rule 74 (elemento -> NOT elemento .)
    DIV             reduce using rule 74 (elemento -> NOT elemento .)
    I               reduce using rule 74 (elemento -> NOT elemento .)
    M               reduce using rule 74 (elemento -> NOT elemento .)
    m               reduce using rule 74 (elemento -> NOT elemento .)
    MI              reduce using rule 74 (elemento -> NOT elemento .)
    mI              reduce using rule 74 (elemento -> NOT elemento .)
    SUM             reduce using rule 74 (elemento -> NOT elemento .)
    RES             reduce using rule 74 (elemento -> NOT elemento .)
    AND             reduce using rule 74 (elemento -> NOT elemento .)
    NEWLINE         reduce using rule 74 (elemento -> NOT elemento .)
    OR              reduce using rule 74 (elemento -> NOT elemento .)
    ID              reduce using rule 74 (elemento -> NOT elemento .)
    TYPE            reduce using rule 74 (elemento -> NOT elemento .)
    IF              reduce using rule 74 (elemento -> NOT elemento .)
    WHILE           reduce using rule 74 (elemento -> NOT elemento .)
    INT             reduce using rule 74 (elemento -> NOT elemento .)
    FLOAT           reduce using rule 74 (elemento -> NOT elemento .)
    BOOL            reduce using rule 74 (elemento -> NOT elemento .)
    CHAR            reduce using rule 74 (elemento -> NOT elemento .)
    ENTERO          reduce using rule 74 (elemento -> NOT elemento .)
    REAL            reduce using rule 74 (elemento -> NOT elemento .)
    CARACTER        reduce using rule 74 (elemento -> NOT elemento .)
    PE              reduce using rule 74 (elemento -> NOT elemento .)
    NOT             reduce using rule 74 (elemento -> NOT elemento .)
    SEN             reduce using rule 74 (elemento -> NOT elemento .)
    COS             reduce using rule 74 (elemento -> NOT elemento .)
    EXP             reduce using rule 74 (elemento -> NOT elemento .)
    LOG             reduce using rule 74 (elemento -> NOT elemento .)
    TRUE            reduce using rule 74 (elemento -> NOT elemento .)
    FALSE           reduce using rule 74 (elemento -> NOT elemento .)
    $end            reduce using rule 74 (elemento -> NOT elemento .)
    LLE             reduce using rule 74 (elemento -> NOT elemento .)
    PA              reduce using rule 74 (elemento -> NOT elemento .)
    COMA            reduce using rule 74 (elemento -> NOT elemento .)
    LLA             reduce using rule 74 (elemento -> NOT elemento .)


state 63

    (75) elemento -> SEN PE . expresion PA
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 94
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 64

    (76) elemento -> COS PE . expresion PA
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 95
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 65

    (77) elemento -> EXP PE . expresion PA
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 96
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 66

    (78) elemento -> LOG PE . expresion PA
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 97
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 67

    (49) expresion -> expresion OR expresion_logica .
    (51) expresion_logica -> expresion_logica . AND expresion_relacional

    NEWLINE         reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    OR              reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    ID              reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    TYPE            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    IF              reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    WHILE           reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    INT             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    FLOAT           reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    BOOL            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    CHAR            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    ENTERO          reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    REAL            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    CARACTER        reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    PE              reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    RES             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    NOT             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    SEN             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    COS             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    EXP             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    LOG             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    TRUE            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    FALSE           reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    $end            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    LLE             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    PA              reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    COMA            reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    LLA             reduce using rule 49 (expresion -> expresion OR expresion_logica .)
    AND             shift and go to state 48


state 68

    (31) expresion -> ID PNTO ID .
    (32) expresion -> ID PNTO ID . EQ expresion

    NEWLINE         reduce using rule 31 (expresion -> ID PNTO ID .)
    OR              reduce using rule 31 (expresion -> ID PNTO ID .)
    ID              reduce using rule 31 (expresion -> ID PNTO ID .)
    TYPE            reduce using rule 31 (expresion -> ID PNTO ID .)
    IF              reduce using rule 31 (expresion -> ID PNTO ID .)
    WHILE           reduce using rule 31 (expresion -> ID PNTO ID .)
    INT             reduce using rule 31 (expresion -> ID PNTO ID .)
    FLOAT           reduce using rule 31 (expresion -> ID PNTO ID .)
    BOOL            reduce using rule 31 (expresion -> ID PNTO ID .)
    CHAR            reduce using rule 31 (expresion -> ID PNTO ID .)
    ENTERO          reduce using rule 31 (expresion -> ID PNTO ID .)
    REAL            reduce using rule 31 (expresion -> ID PNTO ID .)
    CARACTER        reduce using rule 31 (expresion -> ID PNTO ID .)
    PE              reduce using rule 31 (expresion -> ID PNTO ID .)
    RES             reduce using rule 31 (expresion -> ID PNTO ID .)
    NOT             reduce using rule 31 (expresion -> ID PNTO ID .)
    SEN             reduce using rule 31 (expresion -> ID PNTO ID .)
    COS             reduce using rule 31 (expresion -> ID PNTO ID .)
    EXP             reduce using rule 31 (expresion -> ID PNTO ID .)
    LOG             reduce using rule 31 (expresion -> ID PNTO ID .)
    TRUE            reduce using rule 31 (expresion -> ID PNTO ID .)
    FALSE           reduce using rule 31 (expresion -> ID PNTO ID .)
    $end            reduce using rule 31 (expresion -> ID PNTO ID .)
    LLE             reduce using rule 31 (expresion -> ID PNTO ID .)
    PA              reduce using rule 31 (expresion -> ID PNTO ID .)
    COMA            reduce using rule 31 (expresion -> ID PNTO ID .)
    LLA             reduce using rule 31 (expresion -> ID PNTO ID .)
    EQ              shift and go to state 98


state 69

    (11) expresion -> ID PNTO LEN .

    NEWLINE         reduce using rule 11 (expresion -> ID PNTO LEN .)
    OR              reduce using rule 11 (expresion -> ID PNTO LEN .)
    ID              reduce using rule 11 (expresion -> ID PNTO LEN .)
    TYPE            reduce using rule 11 (expresion -> ID PNTO LEN .)
    IF              reduce using rule 11 (expresion -> ID PNTO LEN .)
    WHILE           reduce using rule 11 (expresion -> ID PNTO LEN .)
    INT             reduce using rule 11 (expresion -> ID PNTO LEN .)
    FLOAT           reduce using rule 11 (expresion -> ID PNTO LEN .)
    BOOL            reduce using rule 11 (expresion -> ID PNTO LEN .)
    CHAR            reduce using rule 11 (expresion -> ID PNTO LEN .)
    ENTERO          reduce using rule 11 (expresion -> ID PNTO LEN .)
    REAL            reduce using rule 11 (expresion -> ID PNTO LEN .)
    CARACTER        reduce using rule 11 (expresion -> ID PNTO LEN .)
    PE              reduce using rule 11 (expresion -> ID PNTO LEN .)
    RES             reduce using rule 11 (expresion -> ID PNTO LEN .)
    NOT             reduce using rule 11 (expresion -> ID PNTO LEN .)
    SEN             reduce using rule 11 (expresion -> ID PNTO LEN .)
    COS             reduce using rule 11 (expresion -> ID PNTO LEN .)
    EXP             reduce using rule 11 (expresion -> ID PNTO LEN .)
    LOG             reduce using rule 11 (expresion -> ID PNTO LEN .)
    TRUE            reduce using rule 11 (expresion -> ID PNTO LEN .)
    FALSE           reduce using rule 11 (expresion -> ID PNTO LEN .)
    $end            reduce using rule 11 (expresion -> ID PNTO LEN .)
    LLE             reduce using rule 11 (expresion -> ID PNTO LEN .)
    PA              reduce using rule 11 (expresion -> ID PNTO LEN .)
    COMA            reduce using rule 11 (expresion -> ID PNTO LEN .)
    LLA             reduce using rule 11 (expresion -> ID PNTO LEN .)


state 70

    (13) expresion -> ID CE ENTERO . CA EQ expresion
    (33) expresion -> ID CE ENTERO . CA PNTO ID
    (48) tipo -> ID CE ENTERO . CA
    (12) elemento -> ID CE ENTERO . CA

    CA              shift and go to state 99


state 71

    (15) expresion -> ID EQ expresion .
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 15 (expresion -> ID EQ expresion .)
    ID              reduce using rule 15 (expresion -> ID EQ expresion .)
    TYPE            reduce using rule 15 (expresion -> ID EQ expresion .)
    IF              reduce using rule 15 (expresion -> ID EQ expresion .)
    WHILE           reduce using rule 15 (expresion -> ID EQ expresion .)
    INT             reduce using rule 15 (expresion -> ID EQ expresion .)
    FLOAT           reduce using rule 15 (expresion -> ID EQ expresion .)
    BOOL            reduce using rule 15 (expresion -> ID EQ expresion .)
    CHAR            reduce using rule 15 (expresion -> ID EQ expresion .)
    ENTERO          reduce using rule 15 (expresion -> ID EQ expresion .)
    REAL            reduce using rule 15 (expresion -> ID EQ expresion .)
    CARACTER        reduce using rule 15 (expresion -> ID EQ expresion .)
    PE              reduce using rule 15 (expresion -> ID EQ expresion .)
    RES             reduce using rule 15 (expresion -> ID EQ expresion .)
    NOT             reduce using rule 15 (expresion -> ID EQ expresion .)
    SEN             reduce using rule 15 (expresion -> ID EQ expresion .)
    COS             reduce using rule 15 (expresion -> ID EQ expresion .)
    EXP             reduce using rule 15 (expresion -> ID EQ expresion .)
    LOG             reduce using rule 15 (expresion -> ID EQ expresion .)
    TRUE            reduce using rule 15 (expresion -> ID EQ expresion .)
    FALSE           reduce using rule 15 (expresion -> ID EQ expresion .)
    $end            reduce using rule 15 (expresion -> ID EQ expresion .)
    LLE             reduce using rule 15 (expresion -> ID EQ expresion .)
    PA              reduce using rule 15 (expresion -> ID EQ expresion .)
    COMA            reduce using rule 15 (expresion -> ID EQ expresion .)
    LLA             reduce using rule 15 (expresion -> ID EQ expresion .)
    OR              shift and go to state 36

  ! OR              [ reduce using rule 15 (expresion -> ID EQ expresion .) ]


state 72

    (7) lista_declaraciones -> lista_declaraciones COMA . declaracion
    (8) declaracion -> . ID
    (9) declaracion -> . ID EQ expresion
    (10) declaracion -> . CE ENTERO CA ID

    ID              shift and go to state 43
    CE              shift and go to state 44

    declaracion                    shift and go to state 100

state 73

    (9) declaracion -> ID EQ . expresion
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 101
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 74

    (10) declaracion -> CE ENTERO . CA ID

    CA              shift and go to state 102


state 75

    (16) expresion -> TYPE ID DPNTO . grupo_apertura bloque_propiedades grupo_cierre
    (17) grupo_apertura -> . opt_newline LLE opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    NEWLINE         shift and go to state 79
    LLE             reduce using rule 20 (opt_newline -> .)

    grupo_apertura                 shift and go to state 103
    opt_newline                    shift and go to state 78

state 76

    (34) expresion -> IF expresion bloque .
    (35) expresion -> IF expresion bloque . ELSE bloque

    NEWLINE         reduce using rule 34 (expresion -> IF expresion bloque .)
    OR              reduce using rule 34 (expresion -> IF expresion bloque .)
    ID              reduce using rule 34 (expresion -> IF expresion bloque .)
    TYPE            reduce using rule 34 (expresion -> IF expresion bloque .)
    IF              reduce using rule 34 (expresion -> IF expresion bloque .)
    WHILE           reduce using rule 34 (expresion -> IF expresion bloque .)
    INT             reduce using rule 34 (expresion -> IF expresion bloque .)
    FLOAT           reduce using rule 34 (expresion -> IF expresion bloque .)
    BOOL            reduce using rule 34 (expresion -> IF expresion bloque .)
    CHAR            reduce using rule 34 (expresion -> IF expresion bloque .)
    ENTERO          reduce using rule 34 (expresion -> IF expresion bloque .)
    REAL            reduce using rule 34 (expresion -> IF expresion bloque .)
    CARACTER        reduce using rule 34 (expresion -> IF expresion bloque .)
    PE              reduce using rule 34 (expresion -> IF expresion bloque .)
    RES             reduce using rule 34 (expresion -> IF expresion bloque .)
    NOT             reduce using rule 34 (expresion -> IF expresion bloque .)
    SEN             reduce using rule 34 (expresion -> IF expresion bloque .)
    COS             reduce using rule 34 (expresion -> IF expresion bloque .)
    EXP             reduce using rule 34 (expresion -> IF expresion bloque .)
    LOG             reduce using rule 34 (expresion -> IF expresion bloque .)
    TRUE            reduce using rule 34 (expresion -> IF expresion bloque .)
    FALSE           reduce using rule 34 (expresion -> IF expresion bloque .)
    $end            reduce using rule 34 (expresion -> IF expresion bloque .)
    LLE             reduce using rule 34 (expresion -> IF expresion bloque .)
    PA              reduce using rule 34 (expresion -> IF expresion bloque .)
    COMA            reduce using rule 34 (expresion -> IF expresion bloque .)
    LLA             reduce using rule 34 (expresion -> IF expresion bloque .)
    ELSE            shift and go to state 104


state 77

    (37) bloque -> grupo_apertura . expresiones grupo_cierre
    (38) expresiones -> . expresion
    (39) expresiones -> . expresion NEWLINE
    (40) expresiones -> . expresion NEWLINE expresiones
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresiones                    shift and go to state 105
    expresion                      shift and go to state 106
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 78

    (17) grupo_apertura -> opt_newline . LLE opt_newline

    LLE             shift and go to state 107


state 79

    (19) opt_newline -> NEWLINE .

    LLE             reduce using rule 19 (opt_newline -> NEWLINE .)
    LLA             reduce using rule 19 (opt_newline -> NEWLINE .)
    ID              reduce using rule 19 (opt_newline -> NEWLINE .)
    TYPE            reduce using rule 19 (opt_newline -> NEWLINE .)
    IF              reduce using rule 19 (opt_newline -> NEWLINE .)
    WHILE           reduce using rule 19 (opt_newline -> NEWLINE .)
    INT             reduce using rule 19 (opt_newline -> NEWLINE .)
    FLOAT           reduce using rule 19 (opt_newline -> NEWLINE .)
    BOOL            reduce using rule 19 (opt_newline -> NEWLINE .)
    CHAR            reduce using rule 19 (opt_newline -> NEWLINE .)
    ENTERO          reduce using rule 19 (opt_newline -> NEWLINE .)
    REAL            reduce using rule 19 (opt_newline -> NEWLINE .)
    CARACTER        reduce using rule 19 (opt_newline -> NEWLINE .)
    PE              reduce using rule 19 (opt_newline -> NEWLINE .)
    RES             reduce using rule 19 (opt_newline -> NEWLINE .)
    NOT             reduce using rule 19 (opt_newline -> NEWLINE .)
    SEN             reduce using rule 19 (opt_newline -> NEWLINE .)
    COS             reduce using rule 19 (opt_newline -> NEWLINE .)
    EXP             reduce using rule 19 (opt_newline -> NEWLINE .)
    LOG             reduce using rule 19 (opt_newline -> NEWLINE .)
    TRUE            reduce using rule 19 (opt_newline -> NEWLINE .)
    FALSE           reduce using rule 19 (opt_newline -> NEWLINE .)
    NEWLINE         reduce using rule 19 (opt_newline -> NEWLINE .)
    ELSE            reduce using rule 19 (opt_newline -> NEWLINE .)
    OR              reduce using rule 19 (opt_newline -> NEWLINE .)
    $end            reduce using rule 19 (opt_newline -> NEWLINE .)
    PA              reduce using rule 19 (opt_newline -> NEWLINE .)
    COMA            reduce using rule 19 (opt_newline -> NEWLINE .)


state 80

    (36) expresion -> WHILE expresion bloque .

    NEWLINE         reduce using rule 36 (expresion -> WHILE expresion bloque .)
    OR              reduce using rule 36 (expresion -> WHILE expresion bloque .)
    ID              reduce using rule 36 (expresion -> WHILE expresion bloque .)
    TYPE            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    IF              reduce using rule 36 (expresion -> WHILE expresion bloque .)
    WHILE           reduce using rule 36 (expresion -> WHILE expresion bloque .)
    INT             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    FLOAT           reduce using rule 36 (expresion -> WHILE expresion bloque .)
    BOOL            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    CHAR            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    ENTERO          reduce using rule 36 (expresion -> WHILE expresion bloque .)
    REAL            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    CARACTER        reduce using rule 36 (expresion -> WHILE expresion bloque .)
    PE              reduce using rule 36 (expresion -> WHILE expresion bloque .)
    RES             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    NOT             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    SEN             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    COS             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    EXP             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    LOG             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    TRUE            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    FALSE           reduce using rule 36 (expresion -> WHILE expresion bloque .)
    $end            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    LLE             reduce using rule 36 (expresion -> WHILE expresion bloque .)
    PA              reduce using rule 36 (expresion -> WHILE expresion bloque .)
    COMA            reduce using rule 36 (expresion -> WHILE expresion bloque .)
    LLA             reduce using rule 36 (expresion -> WHILE expresion bloque .)


state 81

    (51) expresion_logica -> expresion_logica AND expresion_relacional .

    AND             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    NEWLINE         reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    OR              reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    ID              reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    TYPE            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    IF              reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    WHILE           reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    INT             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    FLOAT           reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    BOOL            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    CHAR            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    ENTERO          reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    REAL            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    CARACTER        reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    PE              reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    RES             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    NOT             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    SEN             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    COS             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    EXP             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    LOG             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    TRUE            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    FALSE           reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    $end            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    LLE             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    PA              reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    COMA            reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)
    LLA             reduce using rule 51 (expresion_logica -> expresion_logica AND expresion_relacional .)


state 82

    (46) tipo -> tipo_base CE ENTERO . CA

    CA              shift and go to state 108


state 83

    (53) expresion_relacional -> termino_aritmetico I termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

    AND             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    NEWLINE         reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    OR              reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    ID              reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    TYPE            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    IF              reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    WHILE           reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    INT             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    FLOAT           reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    BOOL            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    CHAR            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    ENTERO          reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    REAL            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    CARACTER        reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    PE              reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    NOT             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    SEN             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    COS             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    EXP             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    LOG             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    TRUE            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    FALSE           reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    $end            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    LLE             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    PA              reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    COMA            reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    LLA             reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 53 (expresion_relacional -> termino_aritmetico I termino_aritmetico .) ]


state 84

    (54) expresion_relacional -> termino_aritmetico M termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

    AND             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    NEWLINE         reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    OR              reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    ID              reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    TYPE            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    IF              reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    WHILE           reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    INT             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    FLOAT           reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    BOOL            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    CHAR            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    ENTERO          reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    REAL            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    CARACTER        reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    PE              reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    NOT             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    SEN             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    COS             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    EXP             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    LOG             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    TRUE            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    FALSE           reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    $end            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    LLE             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    PA              reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    COMA            reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    LLA             reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 54 (expresion_relacional -> termino_aritmetico M termino_aritmetico .) ]


state 85

    (55) expresion_relacional -> termino_aritmetico m termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

    AND             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    NEWLINE         reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    OR              reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    ID              reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    TYPE            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    IF              reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    WHILE           reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    INT             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    FLOAT           reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    BOOL            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    CHAR            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    ENTERO          reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    REAL            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    CARACTER        reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    PE              reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    NOT             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    SEN             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    COS             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    EXP             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    LOG             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    TRUE            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    FALSE           reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    $end            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    LLE             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    PA              reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    COMA            reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    LLA             reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 55 (expresion_relacional -> termino_aritmetico m termino_aritmetico .) ]


state 86

    (56) expresion_relacional -> termino_aritmetico MI termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

    AND             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    NEWLINE         reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    OR              reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    ID              reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    TYPE            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    IF              reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    WHILE           reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    INT             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    FLOAT           reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    BOOL            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    CHAR            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    ENTERO          reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    REAL            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    CARACTER        reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    PE              reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    NOT             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    SEN             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    COS             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    EXP             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    LOG             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    TRUE            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    FALSE           reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    $end            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    LLE             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    PA              reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    COMA            reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    LLA             reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 56 (expresion_relacional -> termino_aritmetico MI termino_aritmetico .) ]


state 87

    (57) expresion_relacional -> termino_aritmetico mI termino_aritmetico .
    (59) termino_aritmetico -> termino_aritmetico . SUM factor
    (60) termino_aritmetico -> termino_aritmetico . RES factor

    AND             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    NEWLINE         reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    OR              reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    ID              reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    TYPE            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    IF              reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    WHILE           reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    INT             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    FLOAT           reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    BOOL            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    CHAR            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    ENTERO          reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    REAL            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    CARACTER        reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    PE              reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    NOT             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    SEN             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    COS             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    EXP             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    LOG             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    TRUE            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    FALSE           reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    $end            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    LLE             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    PA              reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    COMA            reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    LLA             reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .)
    SUM             shift and go to state 55
    RES             shift and go to state 56

  ! RES             [ reduce using rule 57 (expresion_relacional -> termino_aritmetico mI termino_aritmetico .) ]


state 88

    (59) termino_aritmetico -> termino_aritmetico SUM factor .
    (62) factor -> factor . MUL elemento
    (63) factor -> factor . DIV elemento

    I               reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    M               reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    m               reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    MI              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    mI              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    SUM             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    RES             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    AND             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    NEWLINE         reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    OR              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    ID              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    TYPE            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    IF              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    WHILE           reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    INT             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    FLOAT           reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    BOOL            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    CHAR            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    ENTERO          reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    REAL            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    CARACTER        reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    PE              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    NOT             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    SEN             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    COS             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    EXP             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    LOG             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    TRUE            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    FALSE           reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    $end            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    LLE             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    PA              reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    COMA            reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    LLA             reduce using rule 59 (termino_aritmetico -> termino_aritmetico SUM factor .)
    MUL             shift and go to state 57
    DIV             shift and go to state 58


state 89

    (60) termino_aritmetico -> termino_aritmetico RES factor .
    (62) factor -> factor . MUL elemento
    (63) factor -> factor . DIV elemento

    I               reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    M               reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    m               reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    MI              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    mI              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    SUM             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    RES             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    AND             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    NEWLINE         reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    OR              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    ID              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    TYPE            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    IF              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    WHILE           reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    INT             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    FLOAT           reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    BOOL            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    CHAR            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    ENTERO          reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    REAL            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    CARACTER        reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    PE              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    NOT             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    SEN             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    COS             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    EXP             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    LOG             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    TRUE            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    FALSE           reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    $end            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    LLE             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    PA              reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    COMA            reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    LLA             reduce using rule 60 (termino_aritmetico -> termino_aritmetico RES factor .)
    MUL             shift and go to state 57
    DIV             shift and go to state 58


state 90

    (62) factor -> factor MUL elemento .

    MUL             reduce using rule 62 (factor -> factor MUL elemento .)
    DIV             reduce using rule 62 (factor -> factor MUL elemento .)
    I               reduce using rule 62 (factor -> factor MUL elemento .)
    M               reduce using rule 62 (factor -> factor MUL elemento .)
    m               reduce using rule 62 (factor -> factor MUL elemento .)
    MI              reduce using rule 62 (factor -> factor MUL elemento .)
    mI              reduce using rule 62 (factor -> factor MUL elemento .)
    SUM             reduce using rule 62 (factor -> factor MUL elemento .)
    RES             reduce using rule 62 (factor -> factor MUL elemento .)
    AND             reduce using rule 62 (factor -> factor MUL elemento .)
    NEWLINE         reduce using rule 62 (factor -> factor MUL elemento .)
    OR              reduce using rule 62 (factor -> factor MUL elemento .)
    ID              reduce using rule 62 (factor -> factor MUL elemento .)
    TYPE            reduce using rule 62 (factor -> factor MUL elemento .)
    IF              reduce using rule 62 (factor -> factor MUL elemento .)
    WHILE           reduce using rule 62 (factor -> factor MUL elemento .)
    INT             reduce using rule 62 (factor -> factor MUL elemento .)
    FLOAT           reduce using rule 62 (factor -> factor MUL elemento .)
    BOOL            reduce using rule 62 (factor -> factor MUL elemento .)
    CHAR            reduce using rule 62 (factor -> factor MUL elemento .)
    ENTERO          reduce using rule 62 (factor -> factor MUL elemento .)
    REAL            reduce using rule 62 (factor -> factor MUL elemento .)
    CARACTER        reduce using rule 62 (factor -> factor MUL elemento .)
    PE              reduce using rule 62 (factor -> factor MUL elemento .)
    NOT             reduce using rule 62 (factor -> factor MUL elemento .)
    SEN             reduce using rule 62 (factor -> factor MUL elemento .)
    COS             reduce using rule 62 (factor -> factor MUL elemento .)
    EXP             reduce using rule 62 (factor -> factor MUL elemento .)
    LOG             reduce using rule 62 (factor -> factor MUL elemento .)
    TRUE            reduce using rule 62 (factor -> factor MUL elemento .)
    FALSE           reduce using rule 62 (factor -> factor MUL elemento .)
    $end            reduce using rule 62 (factor -> factor MUL elemento .)
    LLE             reduce using rule 62 (factor -> factor MUL elemento .)
    PA              reduce using rule 62 (factor -> factor MUL elemento .)
    COMA            reduce using rule 62 (factor -> factor MUL elemento .)
    LLA             reduce using rule 62 (factor -> factor MUL elemento .)


state 91

    (63) factor -> factor DIV elemento .

    MUL             reduce using rule 63 (factor -> factor DIV elemento .)
    DIV             reduce using rule 63 (factor -> factor DIV elemento .)
    I               reduce using rule 63 (factor -> factor DIV elemento .)
    M               reduce using rule 63 (factor -> factor DIV elemento .)
    m               reduce using rule 63 (factor -> factor DIV elemento .)
    MI              reduce using rule 63 (factor -> factor DIV elemento .)
    mI              reduce using rule 63 (factor -> factor DIV elemento .)
    SUM             reduce using rule 63 (factor -> factor DIV elemento .)
    RES             reduce using rule 63 (factor -> factor DIV elemento .)
    AND             reduce using rule 63 (factor -> factor DIV elemento .)
    NEWLINE         reduce using rule 63 (factor -> factor DIV elemento .)
    OR              reduce using rule 63 (factor -> factor DIV elemento .)
    ID              reduce using rule 63 (factor -> factor DIV elemento .)
    TYPE            reduce using rule 63 (factor -> factor DIV elemento .)
    IF              reduce using rule 63 (factor -> factor DIV elemento .)
    WHILE           reduce using rule 63 (factor -> factor DIV elemento .)
    INT             reduce using rule 63 (factor -> factor DIV elemento .)
    FLOAT           reduce using rule 63 (factor -> factor DIV elemento .)
    BOOL            reduce using rule 63 (factor -> factor DIV elemento .)
    CHAR            reduce using rule 63 (factor -> factor DIV elemento .)
    ENTERO          reduce using rule 63 (factor -> factor DIV elemento .)
    REAL            reduce using rule 63 (factor -> factor DIV elemento .)
    CARACTER        reduce using rule 63 (factor -> factor DIV elemento .)
    PE              reduce using rule 63 (factor -> factor DIV elemento .)
    NOT             reduce using rule 63 (factor -> factor DIV elemento .)
    SEN             reduce using rule 63 (factor -> factor DIV elemento .)
    COS             reduce using rule 63 (factor -> factor DIV elemento .)
    EXP             reduce using rule 63 (factor -> factor DIV elemento .)
    LOG             reduce using rule 63 (factor -> factor DIV elemento .)
    TRUE            reduce using rule 63 (factor -> factor DIV elemento .)
    FALSE           reduce using rule 63 (factor -> factor DIV elemento .)
    $end            reduce using rule 63 (factor -> factor DIV elemento .)
    LLE             reduce using rule 63 (factor -> factor DIV elemento .)
    PA              reduce using rule 63 (factor -> factor DIV elemento .)
    COMA            reduce using rule 63 (factor -> factor DIV elemento .)
    LLA             reduce using rule 63 (factor -> factor DIV elemento .)


state 92

    (12) elemento -> ID CE . ENTERO CA

    ENTERO          shift and go to state 109


state 93

    (72) elemento -> PE expresion PA .

    MUL             reduce using rule 72 (elemento -> PE expresion PA .)
    DIV             reduce using rule 72 (elemento -> PE expresion PA .)
    I               reduce using rule 72 (elemento -> PE expresion PA .)
    M               reduce using rule 72 (elemento -> PE expresion PA .)
    m               reduce using rule 72 (elemento -> PE expresion PA .)
    MI              reduce using rule 72 (elemento -> PE expresion PA .)
    mI              reduce using rule 72 (elemento -> PE expresion PA .)
    SUM             reduce using rule 72 (elemento -> PE expresion PA .)
    RES             reduce using rule 72 (elemento -> PE expresion PA .)
    AND             reduce using rule 72 (elemento -> PE expresion PA .)
    NEWLINE         reduce using rule 72 (elemento -> PE expresion PA .)
    OR              reduce using rule 72 (elemento -> PE expresion PA .)
    ID              reduce using rule 72 (elemento -> PE expresion PA .)
    TYPE            reduce using rule 72 (elemento -> PE expresion PA .)
    IF              reduce using rule 72 (elemento -> PE expresion PA .)
    WHILE           reduce using rule 72 (elemento -> PE expresion PA .)
    INT             reduce using rule 72 (elemento -> PE expresion PA .)
    FLOAT           reduce using rule 72 (elemento -> PE expresion PA .)
    BOOL            reduce using rule 72 (elemento -> PE expresion PA .)
    CHAR            reduce using rule 72 (elemento -> PE expresion PA .)
    ENTERO          reduce using rule 72 (elemento -> PE expresion PA .)
    REAL            reduce using rule 72 (elemento -> PE expresion PA .)
    CARACTER        reduce using rule 72 (elemento -> PE expresion PA .)
    PE              reduce using rule 72 (elemento -> PE expresion PA .)
    NOT             reduce using rule 72 (elemento -> PE expresion PA .)
    SEN             reduce using rule 72 (elemento -> PE expresion PA .)
    COS             reduce using rule 72 (elemento -> PE expresion PA .)
    EXP             reduce using rule 72 (elemento -> PE expresion PA .)
    LOG             reduce using rule 72 (elemento -> PE expresion PA .)
    TRUE            reduce using rule 72 (elemento -> PE expresion PA .)
    FALSE           reduce using rule 72 (elemento -> PE expresion PA .)
    $end            reduce using rule 72 (elemento -> PE expresion PA .)
    LLE             reduce using rule 72 (elemento -> PE expresion PA .)
    PA              reduce using rule 72 (elemento -> PE expresion PA .)
    COMA            reduce using rule 72 (elemento -> PE expresion PA .)
    LLA             reduce using rule 72 (elemento -> PE expresion PA .)


state 94

    (75) elemento -> SEN PE expresion . PA
    (49) expresion -> expresion . OR expresion_logica

    PA              shift and go to state 110
    OR              shift and go to state 36


state 95

    (76) elemento -> COS PE expresion . PA
    (49) expresion -> expresion . OR expresion_logica

    PA              shift and go to state 111
    OR              shift and go to state 36


state 96

    (77) elemento -> EXP PE expresion . PA
    (49) expresion -> expresion . OR expresion_logica

    PA              shift and go to state 112
    OR              shift and go to state 36


state 97

    (78) elemento -> LOG PE expresion . PA
    (49) expresion -> expresion . OR expresion_logica

    PA              shift and go to state 113
    OR              shift and go to state 36


state 98

    (32) expresion -> ID PNTO ID EQ . expresion
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 114
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 99

    (13) expresion -> ID CE ENTERO CA . EQ expresion
    (33) expresion -> ID CE ENTERO CA . PNTO ID
    (48) tipo -> ID CE ENTERO CA .
    (12) elemento -> ID CE ENTERO CA .

  ! reduce/reduce conflict for ID resolved using rule 12 (elemento -> ID CE ENTERO CA .)
    EQ              shift and go to state 115
    PNTO            shift and go to state 116
    CE              reduce using rule 48 (tipo -> ID CE ENTERO CA .)
    MUL             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    DIV             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    I               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    M               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    m               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    MI              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    mI              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    SUM             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    RES             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    AND             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    NEWLINE         reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    OR              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    ID              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    TYPE            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    IF              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    WHILE           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    INT             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    FLOAT           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    BOOL            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    CHAR            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    ENTERO          reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    REAL            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    CARACTER        reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    PE              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    NOT             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    SEN             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    COS             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    EXP             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LOG             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    TRUE            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    FALSE           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    $end            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LLE             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    PA              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    COMA            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LLA             reduce using rule 12 (elemento -> ID CE ENTERO CA .)

  ! ID              [ reduce using rule 48 (tipo -> ID CE ENTERO CA .) ]


state 100

    (7) lista_declaraciones -> lista_declaraciones COMA declaracion .

    COMA            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    NEWLINE         reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    OR              reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    ID              reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    TYPE            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    IF              reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    WHILE           reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    INT             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    FLOAT           reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    BOOL            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    CHAR            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    ENTERO          reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    REAL            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    CARACTER        reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    PE              reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    RES             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    NOT             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    SEN             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    COS             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    EXP             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    LOG             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    TRUE            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    FALSE           reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    $end            reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    LLE             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    PA              reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)
    LLA             reduce using rule 7 (lista_declaraciones -> lista_declaraciones COMA declaracion .)


state 101

    (9) declaracion -> ID EQ expresion .
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for OR resolved as shift
    COMA            reduce using rule 9 (declaracion -> ID EQ expresion .)
    NEWLINE         reduce using rule 9 (declaracion -> ID EQ expresion .)
    ID              reduce using rule 9 (declaracion -> ID EQ expresion .)
    TYPE            reduce using rule 9 (declaracion -> ID EQ expresion .)
    IF              reduce using rule 9 (declaracion -> ID EQ expresion .)
    WHILE           reduce using rule 9 (declaracion -> ID EQ expresion .)
    INT             reduce using rule 9 (declaracion -> ID EQ expresion .)
    FLOAT           reduce using rule 9 (declaracion -> ID EQ expresion .)
    BOOL            reduce using rule 9 (declaracion -> ID EQ expresion .)
    CHAR            reduce using rule 9 (declaracion -> ID EQ expresion .)
    ENTERO          reduce using rule 9 (declaracion -> ID EQ expresion .)
    REAL            reduce using rule 9 (declaracion -> ID EQ expresion .)
    CARACTER        reduce using rule 9 (declaracion -> ID EQ expresion .)
    PE              reduce using rule 9 (declaracion -> ID EQ expresion .)
    RES             reduce using rule 9 (declaracion -> ID EQ expresion .)
    NOT             reduce using rule 9 (declaracion -> ID EQ expresion .)
    SEN             reduce using rule 9 (declaracion -> ID EQ expresion .)
    COS             reduce using rule 9 (declaracion -> ID EQ expresion .)
    EXP             reduce using rule 9 (declaracion -> ID EQ expresion .)
    LOG             reduce using rule 9 (declaracion -> ID EQ expresion .)
    TRUE            reduce using rule 9 (declaracion -> ID EQ expresion .)
    FALSE           reduce using rule 9 (declaracion -> ID EQ expresion .)
    $end            reduce using rule 9 (declaracion -> ID EQ expresion .)
    LLE             reduce using rule 9 (declaracion -> ID EQ expresion .)
    PA              reduce using rule 9 (declaracion -> ID EQ expresion .)
    LLA             reduce using rule 9 (declaracion -> ID EQ expresion .)
    OR              shift and go to state 36

  ! OR              [ reduce using rule 9 (declaracion -> ID EQ expresion .) ]


state 102

    (10) declaracion -> CE ENTERO CA . ID

    ID              shift and go to state 117


state 103

    (16) expresion -> TYPE ID DPNTO grupo_apertura . bloque_propiedades grupo_cierre
    (21) bloque_propiedades -> . propiedad
    (22) bloque_propiedades -> . propiedad NEWLINE
    (23) bloque_propiedades -> . propiedad NEWLINE bloque_propiedades
    (24) bloque_propiedades -> . propiedad bloque_propiedades
    (25) bloque_propiedades -> . NEWLINE bloque_propiedades
    (26) propiedad -> . tipo lista_ids
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR

    NEWLINE         shift and go to state 121
    ID              shift and go to state 118
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18

    bloque_propiedades             shift and go to state 119
    propiedad                      shift and go to state 120
    tipo                           shift and go to state 122
    tipo_base                      shift and go to state 13

state 104

    (35) expresion -> IF expresion bloque ELSE . bloque
    (37) bloque -> . grupo_apertura expresiones grupo_cierre
    (17) grupo_apertura -> . opt_newline LLE opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    NEWLINE         shift and go to state 79
    LLE             reduce using rule 20 (opt_newline -> .)

    bloque                         shift and go to state 123
    grupo_apertura                 shift and go to state 77
    opt_newline                    shift and go to state 78

state 105

    (37) bloque -> grupo_apertura expresiones . grupo_cierre
    (18) grupo_cierre -> . opt_newline LLA opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    NEWLINE         shift and go to state 79
    LLA             reduce using rule 20 (opt_newline -> .)

    grupo_cierre                   shift and go to state 124
    opt_newline                    shift and go to state 125

state 106

    (38) expresiones -> expresion .
    (39) expresiones -> expresion . NEWLINE
    (40) expresiones -> expresion . NEWLINE expresiones
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for NEWLINE resolved as shift
    LLA             reduce using rule 38 (expresiones -> expresion .)
    NEWLINE         shift and go to state 126
    OR              shift and go to state 36

  ! NEWLINE         [ reduce using rule 38 (expresiones -> expresion .) ]


state 107

    (17) grupo_apertura -> opt_newline LLE . opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 79
    ID              reduce using rule 20 (opt_newline -> .)
    TYPE            reduce using rule 20 (opt_newline -> .)
    IF              reduce using rule 20 (opt_newline -> .)
    WHILE           reduce using rule 20 (opt_newline -> .)
    INT             reduce using rule 20 (opt_newline -> .)
    FLOAT           reduce using rule 20 (opt_newline -> .)
    BOOL            reduce using rule 20 (opt_newline -> .)
    CHAR            reduce using rule 20 (opt_newline -> .)
    ENTERO          reduce using rule 20 (opt_newline -> .)
    REAL            reduce using rule 20 (opt_newline -> .)
    CARACTER        reduce using rule 20 (opt_newline -> .)
    PE              reduce using rule 20 (opt_newline -> .)
    RES             reduce using rule 20 (opt_newline -> .)
    NOT             reduce using rule 20 (opt_newline -> .)
    SEN             reduce using rule 20 (opt_newline -> .)
    COS             reduce using rule 20 (opt_newline -> .)
    EXP             reduce using rule 20 (opt_newline -> .)
    LOG             reduce using rule 20 (opt_newline -> .)
    TRUE            reduce using rule 20 (opt_newline -> .)
    FALSE           reduce using rule 20 (opt_newline -> .)

  ! NEWLINE         [ reduce using rule 20 (opt_newline -> .) ]

    opt_newline                    shift and go to state 127

state 108

    (46) tipo -> tipo_base CE ENTERO CA .

    ID              reduce using rule 46 (tipo -> tipo_base CE ENTERO CA .)
    CE              reduce using rule 46 (tipo -> tipo_base CE ENTERO CA .)


state 109

    (12) elemento -> ID CE ENTERO . CA

    CA              shift and go to state 128


state 110

    (75) elemento -> SEN PE expresion PA .

    MUL             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    DIV             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    I               reduce using rule 75 (elemento -> SEN PE expresion PA .)
    M               reduce using rule 75 (elemento -> SEN PE expresion PA .)
    m               reduce using rule 75 (elemento -> SEN PE expresion PA .)
    MI              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    mI              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    SUM             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    RES             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    AND             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    NEWLINE         reduce using rule 75 (elemento -> SEN PE expresion PA .)
    OR              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    ID              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    TYPE            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    IF              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    WHILE           reduce using rule 75 (elemento -> SEN PE expresion PA .)
    INT             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    FLOAT           reduce using rule 75 (elemento -> SEN PE expresion PA .)
    BOOL            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    CHAR            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    ENTERO          reduce using rule 75 (elemento -> SEN PE expresion PA .)
    REAL            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    CARACTER        reduce using rule 75 (elemento -> SEN PE expresion PA .)
    PE              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    NOT             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    SEN             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    COS             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    EXP             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    LOG             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    TRUE            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    FALSE           reduce using rule 75 (elemento -> SEN PE expresion PA .)
    $end            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    LLE             reduce using rule 75 (elemento -> SEN PE expresion PA .)
    PA              reduce using rule 75 (elemento -> SEN PE expresion PA .)
    COMA            reduce using rule 75 (elemento -> SEN PE expresion PA .)
    LLA             reduce using rule 75 (elemento -> SEN PE expresion PA .)


state 111

    (76) elemento -> COS PE expresion PA .

    MUL             reduce using rule 76 (elemento -> COS PE expresion PA .)
    DIV             reduce using rule 76 (elemento -> COS PE expresion PA .)
    I               reduce using rule 76 (elemento -> COS PE expresion PA .)
    M               reduce using rule 76 (elemento -> COS PE expresion PA .)
    m               reduce using rule 76 (elemento -> COS PE expresion PA .)
    MI              reduce using rule 76 (elemento -> COS PE expresion PA .)
    mI              reduce using rule 76 (elemento -> COS PE expresion PA .)
    SUM             reduce using rule 76 (elemento -> COS PE expresion PA .)
    RES             reduce using rule 76 (elemento -> COS PE expresion PA .)
    AND             reduce using rule 76 (elemento -> COS PE expresion PA .)
    NEWLINE         reduce using rule 76 (elemento -> COS PE expresion PA .)
    OR              reduce using rule 76 (elemento -> COS PE expresion PA .)
    ID              reduce using rule 76 (elemento -> COS PE expresion PA .)
    TYPE            reduce using rule 76 (elemento -> COS PE expresion PA .)
    IF              reduce using rule 76 (elemento -> COS PE expresion PA .)
    WHILE           reduce using rule 76 (elemento -> COS PE expresion PA .)
    INT             reduce using rule 76 (elemento -> COS PE expresion PA .)
    FLOAT           reduce using rule 76 (elemento -> COS PE expresion PA .)
    BOOL            reduce using rule 76 (elemento -> COS PE expresion PA .)
    CHAR            reduce using rule 76 (elemento -> COS PE expresion PA .)
    ENTERO          reduce using rule 76 (elemento -> COS PE expresion PA .)
    REAL            reduce using rule 76 (elemento -> COS PE expresion PA .)
    CARACTER        reduce using rule 76 (elemento -> COS PE expresion PA .)
    PE              reduce using rule 76 (elemento -> COS PE expresion PA .)
    NOT             reduce using rule 76 (elemento -> COS PE expresion PA .)
    SEN             reduce using rule 76 (elemento -> COS PE expresion PA .)
    COS             reduce using rule 76 (elemento -> COS PE expresion PA .)
    EXP             reduce using rule 76 (elemento -> COS PE expresion PA .)
    LOG             reduce using rule 76 (elemento -> COS PE expresion PA .)
    TRUE            reduce using rule 76 (elemento -> COS PE expresion PA .)
    FALSE           reduce using rule 76 (elemento -> COS PE expresion PA .)
    $end            reduce using rule 76 (elemento -> COS PE expresion PA .)
    LLE             reduce using rule 76 (elemento -> COS PE expresion PA .)
    PA              reduce using rule 76 (elemento -> COS PE expresion PA .)
    COMA            reduce using rule 76 (elemento -> COS PE expresion PA .)
    LLA             reduce using rule 76 (elemento -> COS PE expresion PA .)


state 112

    (77) elemento -> EXP PE expresion PA .

    MUL             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    DIV             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    I               reduce using rule 77 (elemento -> EXP PE expresion PA .)
    M               reduce using rule 77 (elemento -> EXP PE expresion PA .)
    m               reduce using rule 77 (elemento -> EXP PE expresion PA .)
    MI              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    mI              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    SUM             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    RES             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    AND             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    NEWLINE         reduce using rule 77 (elemento -> EXP PE expresion PA .)
    OR              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    ID              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    TYPE            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    IF              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    WHILE           reduce using rule 77 (elemento -> EXP PE expresion PA .)
    INT             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    FLOAT           reduce using rule 77 (elemento -> EXP PE expresion PA .)
    BOOL            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    CHAR            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    ENTERO          reduce using rule 77 (elemento -> EXP PE expresion PA .)
    REAL            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    CARACTER        reduce using rule 77 (elemento -> EXP PE expresion PA .)
    PE              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    NOT             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    SEN             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    COS             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    EXP             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    LOG             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    TRUE            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    FALSE           reduce using rule 77 (elemento -> EXP PE expresion PA .)
    $end            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    LLE             reduce using rule 77 (elemento -> EXP PE expresion PA .)
    PA              reduce using rule 77 (elemento -> EXP PE expresion PA .)
    COMA            reduce using rule 77 (elemento -> EXP PE expresion PA .)
    LLA             reduce using rule 77 (elemento -> EXP PE expresion PA .)


state 113

    (78) elemento -> LOG PE expresion PA .

    MUL             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    DIV             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    I               reduce using rule 78 (elemento -> LOG PE expresion PA .)
    M               reduce using rule 78 (elemento -> LOG PE expresion PA .)
    m               reduce using rule 78 (elemento -> LOG PE expresion PA .)
    MI              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    mI              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    SUM             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    RES             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    AND             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    NEWLINE         reduce using rule 78 (elemento -> LOG PE expresion PA .)
    OR              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    ID              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    TYPE            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    IF              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    WHILE           reduce using rule 78 (elemento -> LOG PE expresion PA .)
    INT             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    FLOAT           reduce using rule 78 (elemento -> LOG PE expresion PA .)
    BOOL            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    CHAR            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    ENTERO          reduce using rule 78 (elemento -> LOG PE expresion PA .)
    REAL            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    CARACTER        reduce using rule 78 (elemento -> LOG PE expresion PA .)
    PE              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    NOT             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    SEN             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    COS             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    EXP             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    LOG             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    TRUE            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    FALSE           reduce using rule 78 (elemento -> LOG PE expresion PA .)
    $end            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    LLE             reduce using rule 78 (elemento -> LOG PE expresion PA .)
    PA              reduce using rule 78 (elemento -> LOG PE expresion PA .)
    COMA            reduce using rule 78 (elemento -> LOG PE expresion PA .)
    LLA             reduce using rule 78 (elemento -> LOG PE expresion PA .)


state 114

    (32) expresion -> ID PNTO ID EQ expresion .
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    ID              reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    TYPE            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    IF              reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    WHILE           reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    INT             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    FLOAT           reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    BOOL            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    CHAR            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    ENTERO          reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    REAL            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    CARACTER        reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    PE              reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    RES             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    NOT             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    SEN             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    COS             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    EXP             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    LOG             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    TRUE            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    FALSE           reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    $end            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    LLE             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    PA              reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    COMA            reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    LLA             reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .)
    OR              shift and go to state 36

  ! OR              [ reduce using rule 32 (expresion -> ID PNTO ID EQ expresion .) ]


state 115

    (13) expresion -> ID CE ENTERO CA EQ . expresion
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 129
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 116

    (33) expresion -> ID CE ENTERO CA PNTO . ID

    ID              shift and go to state 130


state 117

    (10) declaracion -> CE ENTERO CA ID .

    COMA            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    NEWLINE         reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    OR              reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    ID              reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    TYPE            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    IF              reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    WHILE           reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    INT             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    FLOAT           reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    BOOL            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    CHAR            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    ENTERO          reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    REAL            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    CARACTER        reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    PE              reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    RES             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    NOT             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    SEN             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    COS             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    EXP             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    LOG             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    TRUE            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    FALSE           reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    $end            reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    LLE             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    PA              reduce using rule 10 (declaracion -> CE ENTERO CA ID .)
    LLA             reduce using rule 10 (declaracion -> CE ENTERO CA ID .)


state 118

    (47) tipo -> ID .
    (48) tipo -> ID . CE ENTERO CA

    ID              reduce using rule 47 (tipo -> ID .)
    CE              shift and go to state 131


state 119

    (16) expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades . grupo_cierre
    (18) grupo_cierre -> . opt_newline LLA opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

    NEWLINE         shift and go to state 79
    LLA             reduce using rule 20 (opt_newline -> .)

    grupo_cierre                   shift and go to state 132
    opt_newline                    shift and go to state 125

state 120

    (21) bloque_propiedades -> propiedad .
    (22) bloque_propiedades -> propiedad . NEWLINE
    (23) bloque_propiedades -> propiedad . NEWLINE bloque_propiedades
    (24) bloque_propiedades -> propiedad . bloque_propiedades
    (21) bloque_propiedades -> . propiedad
    (22) bloque_propiedades -> . propiedad NEWLINE
    (23) bloque_propiedades -> . propiedad NEWLINE bloque_propiedades
    (24) bloque_propiedades -> . propiedad bloque_propiedades
    (25) bloque_propiedades -> . NEWLINE bloque_propiedades
    (26) propiedad -> . tipo lista_ids
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR

  ! shift/reduce conflict for NEWLINE resolved as shift
    LLA             reduce using rule 21 (bloque_propiedades -> propiedad .)
    NEWLINE         shift and go to state 133
    ID              shift and go to state 118
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18

  ! NEWLINE         [ reduce using rule 21 (bloque_propiedades -> propiedad .) ]

    propiedad                      shift and go to state 120
    bloque_propiedades             shift and go to state 134
    tipo                           shift and go to state 122
    tipo_base                      shift and go to state 13

state 121

    (25) bloque_propiedades -> NEWLINE . bloque_propiedades
    (21) bloque_propiedades -> . propiedad
    (22) bloque_propiedades -> . propiedad NEWLINE
    (23) bloque_propiedades -> . propiedad NEWLINE bloque_propiedades
    (24) bloque_propiedades -> . propiedad bloque_propiedades
    (25) bloque_propiedades -> . NEWLINE bloque_propiedades
    (26) propiedad -> . tipo lista_ids
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR

    NEWLINE         shift and go to state 121
    ID              shift and go to state 118
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18

    bloque_propiedades             shift and go to state 135
    propiedad                      shift and go to state 120
    tipo                           shift and go to state 122
    tipo_base                      shift and go to state 13

state 122

    (26) propiedad -> tipo . lista_ids
    (27) lista_ids -> . ID
    (28) lista_ids -> . lista_ids COMA ID

    ID              shift and go to state 137

    lista_ids                      shift and go to state 136

state 123

    (35) expresion -> IF expresion bloque ELSE bloque .

    NEWLINE         reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    OR              reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    ID              reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    TYPE            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    IF              reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    WHILE           reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    INT             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    FLOAT           reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    BOOL            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    CHAR            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    ENTERO          reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    REAL            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    CARACTER        reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    PE              reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    RES             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    NOT             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    SEN             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    COS             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    EXP             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    LOG             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    TRUE            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    FALSE           reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    $end            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    LLE             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    PA              reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    COMA            reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)
    LLA             reduce using rule 35 (expresion -> IF expresion bloque ELSE bloque .)


state 124

    (37) bloque -> grupo_apertura expresiones grupo_cierre .

    ELSE            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    NEWLINE         reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    OR              reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    ID              reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    TYPE            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    IF              reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    WHILE           reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    INT             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    FLOAT           reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    BOOL            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    CHAR            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    ENTERO          reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    REAL            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    CARACTER        reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    PE              reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    RES             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    NOT             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    SEN             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    COS             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    EXP             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    LOG             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    TRUE            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    FALSE           reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    $end            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    LLE             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    PA              reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    COMA            reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)
    LLA             reduce using rule 37 (bloque -> grupo_apertura expresiones grupo_cierre .)


state 125

    (18) grupo_cierre -> opt_newline . LLA opt_newline

    LLA             shift and go to state 138


state 126

    (39) expresiones -> expresion NEWLINE .
    (40) expresiones -> expresion NEWLINE . expresiones
    (38) expresiones -> . expresion
    (39) expresiones -> . expresion NEWLINE
    (40) expresiones -> . expresion NEWLINE expresiones
    (11) expresion -> . ID PNTO LEN
    (13) expresion -> . ID CE ENTERO CA EQ expresion
    (14) expresion -> . tipo lista_declaraciones
    (15) expresion -> . ID EQ expresion
    (16) expresion -> . TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre
    (29) expresion -> . ids
    (31) expresion -> . ID PNTO ID
    (32) expresion -> . ID PNTO ID EQ expresion
    (33) expresion -> . ID CE ENTERO CA PNTO ID
    (34) expresion -> . IF expresion bloque
    (35) expresion -> . IF expresion bloque ELSE bloque
    (36) expresion -> . WHILE expresion bloque
    (49) expresion -> . expresion OR expresion_logica
    (50) expresion -> . expresion_logica
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (30) ids -> . ID ID
    (51) expresion_logica -> . expresion_logica AND expresion_relacional
    (52) expresion_logica -> . expresion_relacional
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR
    (53) expresion_relacional -> . termino_aritmetico I termino_aritmetico
    (54) expresion_relacional -> . termino_aritmetico M termino_aritmetico
    (55) expresion_relacional -> . termino_aritmetico m termino_aritmetico
    (56) expresion_relacional -> . termino_aritmetico MI termino_aritmetico
    (57) expresion_relacional -> . termino_aritmetico mI termino_aritmetico
    (58) expresion_relacional -> . termino_aritmetico
    (59) termino_aritmetico -> . termino_aritmetico SUM factor
    (60) termino_aritmetico -> . termino_aritmetico RES factor
    (61) termino_aritmetico -> . factor
    (62) factor -> . factor MUL elemento
    (63) factor -> . factor DIV elemento
    (64) factor -> . elemento
    (12) elemento -> . ID CE ENTERO CA
    (67) elemento -> . ENTERO
    (68) elemento -> . REAL
    (69) elemento -> . booleano
    (70) elemento -> . CARACTER
    (71) elemento -> . ID
    (72) elemento -> . PE expresion PA
    (73) elemento -> . RES elemento
    (74) elemento -> . NOT elemento
    (75) elemento -> . SEN PE expresion PA
    (76) elemento -> . COS PE expresion PA
    (77) elemento -> . EXP PE expresion PA
    (78) elemento -> . LOG PE expresion PA
    (65) booleano -> . TRUE
    (66) booleano -> . FALSE

    NEWLINE         reduce using rule 39 (expresiones -> expresion NEWLINE .)
    LLA             reduce using rule 39 (expresiones -> expresion NEWLINE .)
    ID              shift and go to state 5
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18
    ENTERO          shift and go to state 6
    REAL            shift and go to state 23
    CARACTER        shift and go to state 25
    PE              shift and go to state 26
    RES             shift and go to state 21
    NOT             shift and go to state 27
    SEN             shift and go to state 28
    COS             shift and go to state 29
    EXP             shift and go to state 30
    LOG             shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33

    expresion                      shift and go to state 106
    expresiones                    shift and go to state 139
    tipo                           shift and go to state 7
    ids                            shift and go to state 9
    expresion_logica               shift and go to state 12
    tipo_base                      shift and go to state 13
    expresion_relacional           shift and go to state 14
    termino_aritmetico             shift and go to state 19
    factor                         shift and go to state 20
    elemento                       shift and go to state 22
    booleano                       shift and go to state 24

state 127

    (17) grupo_apertura -> opt_newline LLE opt_newline .

    ID              reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    TYPE            reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    IF              reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    WHILE           reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    INT             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    FLOAT           reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    BOOL            reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    CHAR            reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    ENTERO          reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    REAL            reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    CARACTER        reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    PE              reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    RES             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    NOT             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    SEN             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    COS             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    EXP             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    LOG             reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    TRUE            reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    FALSE           reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)
    NEWLINE         reduce using rule 17 (grupo_apertura -> opt_newline LLE opt_newline .)


state 128

    (12) elemento -> ID CE ENTERO CA .

    MUL             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    DIV             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    I               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    M               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    m               reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    MI              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    mI              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    SUM             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    RES             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    AND             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    NEWLINE         reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    OR              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    ID              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    TYPE            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    IF              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    WHILE           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    INT             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    FLOAT           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    BOOL            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    CHAR            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    ENTERO          reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    REAL            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    CARACTER        reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    PE              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    NOT             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    SEN             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    COS             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    EXP             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LOG             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    TRUE            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    FALSE           reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    $end            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LLE             reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    PA              reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    COMA            reduce using rule 12 (elemento -> ID CE ENTERO CA .)
    LLA             reduce using rule 12 (elemento -> ID CE ENTERO CA .)


state 129

    (13) expresion -> ID CE ENTERO CA EQ expresion .
    (49) expresion -> expresion . OR expresion_logica

  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    ID              reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    TYPE            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    IF              reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    WHILE           reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    INT             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    FLOAT           reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    BOOL            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    CHAR            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    ENTERO          reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    REAL            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    CARACTER        reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    PE              reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    RES             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    NOT             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    SEN             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    COS             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    EXP             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    LOG             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    TRUE            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    FALSE           reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    $end            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    LLE             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    PA              reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    COMA            reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    LLA             reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .)
    OR              shift and go to state 36

  ! OR              [ reduce using rule 13 (expresion -> ID CE ENTERO CA EQ expresion .) ]


state 130

    (33) expresion -> ID CE ENTERO CA PNTO ID .

    NEWLINE         reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    OR              reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    ID              reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    TYPE            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    IF              reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    WHILE           reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    INT             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    FLOAT           reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    BOOL            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    CHAR            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    ENTERO          reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    REAL            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    CARACTER        reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    PE              reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    RES             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    NOT             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    SEN             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    COS             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    EXP             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    LOG             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    TRUE            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    FALSE           reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    $end            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    LLE             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    PA              reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    COMA            reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)
    LLA             reduce using rule 33 (expresion -> ID CE ENTERO CA PNTO ID .)


state 131

    (48) tipo -> ID CE . ENTERO CA

    ENTERO          shift and go to state 140


state 132

    (16) expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .

    NEWLINE         reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    OR              reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    ID              reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    TYPE            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    IF              reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    WHILE           reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    INT             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    FLOAT           reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    BOOL            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    CHAR            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    ENTERO          reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    REAL            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    CARACTER        reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    PE              reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    RES             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    NOT             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    SEN             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    COS             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    EXP             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    LOG             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    TRUE            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    FALSE           reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    $end            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    LLE             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    PA              reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    COMA            reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)
    LLA             reduce using rule 16 (expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre .)


state 133

    (22) bloque_propiedades -> propiedad NEWLINE .
    (23) bloque_propiedades -> propiedad NEWLINE . bloque_propiedades
    (25) bloque_propiedades -> NEWLINE . bloque_propiedades
    (21) bloque_propiedades -> . propiedad
    (22) bloque_propiedades -> . propiedad NEWLINE
    (23) bloque_propiedades -> . propiedad NEWLINE bloque_propiedades
    (24) bloque_propiedades -> . propiedad bloque_propiedades
    (25) bloque_propiedades -> . NEWLINE bloque_propiedades
    (26) propiedad -> . tipo lista_ids
    (45) tipo -> . tipo_base
    (46) tipo -> . tipo_base CE ENTERO CA
    (47) tipo -> . ID
    (48) tipo -> . ID CE ENTERO CA
    (41) tipo_base -> . INT
    (42) tipo_base -> . FLOAT
    (43) tipo_base -> . BOOL
    (44) tipo_base -> . CHAR

  ! shift/reduce conflict for NEWLINE resolved as shift
    LLA             reduce using rule 22 (bloque_propiedades -> propiedad NEWLINE .)
    NEWLINE         shift and go to state 121
    ID              shift and go to state 118
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    BOOL            shift and go to state 17
    CHAR            shift and go to state 18

  ! NEWLINE         [ reduce using rule 22 (bloque_propiedades -> propiedad NEWLINE .) ]

    propiedad                      shift and go to state 120
    bloque_propiedades             shift and go to state 141
    tipo                           shift and go to state 122
    tipo_base                      shift and go to state 13

state 134

    (24) bloque_propiedades -> propiedad bloque_propiedades .

    NEWLINE         reduce using rule 24 (bloque_propiedades -> propiedad bloque_propiedades .)
    LLA             reduce using rule 24 (bloque_propiedades -> propiedad bloque_propiedades .)


state 135

    (25) bloque_propiedades -> NEWLINE bloque_propiedades .

    NEWLINE         reduce using rule 25 (bloque_propiedades -> NEWLINE bloque_propiedades .)
    LLA             reduce using rule 25 (bloque_propiedades -> NEWLINE bloque_propiedades .)


state 136

    (26) propiedad -> tipo lista_ids .
    (28) lista_ids -> lista_ids . COMA ID

    NEWLINE         reduce using rule 26 (propiedad -> tipo lista_ids .)
    ID              reduce using rule 26 (propiedad -> tipo lista_ids .)
    INT             reduce using rule 26 (propiedad -> tipo lista_ids .)
    FLOAT           reduce using rule 26 (propiedad -> tipo lista_ids .)
    BOOL            reduce using rule 26 (propiedad -> tipo lista_ids .)
    CHAR            reduce using rule 26 (propiedad -> tipo lista_ids .)
    LLA             reduce using rule 26 (propiedad -> tipo lista_ids .)
    COMA            shift and go to state 142


state 137

    (27) lista_ids -> ID .

    COMA            reduce using rule 27 (lista_ids -> ID .)
    NEWLINE         reduce using rule 27 (lista_ids -> ID .)
    ID              reduce using rule 27 (lista_ids -> ID .)
    INT             reduce using rule 27 (lista_ids -> ID .)
    FLOAT           reduce using rule 27 (lista_ids -> ID .)
    BOOL            reduce using rule 27 (lista_ids -> ID .)
    CHAR            reduce using rule 27 (lista_ids -> ID .)
    LLA             reduce using rule 27 (lista_ids -> ID .)


state 138

    (18) grupo_cierre -> opt_newline LLA . opt_newline
    (19) opt_newline -> . NEWLINE
    (20) opt_newline -> .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 79
    ELSE            reduce using rule 20 (opt_newline -> .)
    OR              reduce using rule 20 (opt_newline -> .)
    ID              reduce using rule 20 (opt_newline -> .)
    TYPE            reduce using rule 20 (opt_newline -> .)
    IF              reduce using rule 20 (opt_newline -> .)
    WHILE           reduce using rule 20 (opt_newline -> .)
    INT             reduce using rule 20 (opt_newline -> .)
    FLOAT           reduce using rule 20 (opt_newline -> .)
    BOOL            reduce using rule 20 (opt_newline -> .)
    CHAR            reduce using rule 20 (opt_newline -> .)
    ENTERO          reduce using rule 20 (opt_newline -> .)
    REAL            reduce using rule 20 (opt_newline -> .)
    CARACTER        reduce using rule 20 (opt_newline -> .)
    PE              reduce using rule 20 (opt_newline -> .)
    RES             reduce using rule 20 (opt_newline -> .)
    NOT             reduce using rule 20 (opt_newline -> .)
    SEN             reduce using rule 20 (opt_newline -> .)
    COS             reduce using rule 20 (opt_newline -> .)
    EXP             reduce using rule 20 (opt_newline -> .)
    LOG             reduce using rule 20 (opt_newline -> .)
    TRUE            reduce using rule 20 (opt_newline -> .)
    FALSE           reduce using rule 20 (opt_newline -> .)
    $end            reduce using rule 20 (opt_newline -> .)
    LLE             reduce using rule 20 (opt_newline -> .)
    PA              reduce using rule 20 (opt_newline -> .)
    COMA            reduce using rule 20 (opt_newline -> .)
    LLA             reduce using rule 20 (opt_newline -> .)

  ! NEWLINE         [ reduce using rule 20 (opt_newline -> .) ]

    opt_newline                    shift and go to state 143

state 139

    (40) expresiones -> expresion NEWLINE expresiones .

    NEWLINE         reduce using rule 40 (expresiones -> expresion NEWLINE expresiones .)
    LLA             reduce using rule 40 (expresiones -> expresion NEWLINE expresiones .)


state 140

    (48) tipo -> ID CE ENTERO . CA

    CA              shift and go to state 144


state 141

    (23) bloque_propiedades -> propiedad NEWLINE bloque_propiedades .
    (25) bloque_propiedades -> NEWLINE bloque_propiedades .

  ! reduce/reduce conflict for NEWLINE resolved using rule 23 (bloque_propiedades -> propiedad NEWLINE bloque_propiedades .)
  ! reduce/reduce conflict for LLA resolved using rule 23 (bloque_propiedades -> propiedad NEWLINE bloque_propiedades .)
    NEWLINE         reduce using rule 23 (bloque_propiedades -> propiedad NEWLINE bloque_propiedades .)
    LLA             reduce using rule 23 (bloque_propiedades -> propiedad NEWLINE bloque_propiedades .)

  ! NEWLINE         [ reduce using rule 25 (bloque_propiedades -> NEWLINE bloque_propiedades .) ]
  ! LLA             [ reduce using rule 25 (bloque_propiedades -> NEWLINE bloque_propiedades .) ]


state 142

    (28) lista_ids -> lista_ids COMA . ID

    ID              shift and go to state 145


state 143

    (18) grupo_cierre -> opt_newline LLA opt_newline .

    ELSE            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    NEWLINE         reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    OR              reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    ID              reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    TYPE            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    IF              reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    WHILE           reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    INT             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    FLOAT           reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    BOOL            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    CHAR            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    ENTERO          reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    REAL            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    CARACTER        reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    PE              reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    RES             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    NOT             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    SEN             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    COS             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    EXP             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    LOG             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    TRUE            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    FALSE           reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    $end            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    LLE             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    PA              reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    COMA            reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)
    LLA             reduce using rule 18 (grupo_cierre -> opt_newline LLA opt_newline .)


state 144

    (48) tipo -> ID CE ENTERO CA .

    ID              reduce using rule 48 (tipo -> ID CE ENTERO CA .)


state 145

    (28) lista_ids -> lista_ids COMA ID .

    COMA            reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    NEWLINE         reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    ID              reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    INT             reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    FLOAT           reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    BOOL            reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    CHAR            reduce using rule 28 (lista_ids -> lista_ids COMA ID .)
    LLA             reduce using rule 28 (lista_ids -> lista_ids COMA ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 3 resolved as shift
WARNING: shift/reduce conflict for CE in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for CE in state 13 resolved as shift
WARNING: shift/reduce conflict for RES in state 19 resolved as shift
WARNING: shift/reduce conflict for COMA in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 106 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 133 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 138 resolved as shift
WARNING: reduce/reduce conflict in state 99 resolved using rule (elemento -> ID CE ENTERO CA)
WARNING: rejected rule (tipo -> ID CE ENTERO CA) in state 99
WARNING: reduce/reduce conflict in state 141 resolved using rule (bloque_propiedades -> propiedad NEWLINE bloque_propiedades)
WARNING: rejected rule (bloque_propiedades -> NEWLINE bloque_propiedades) in state 141
