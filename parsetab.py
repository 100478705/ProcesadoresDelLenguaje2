
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftORleftANDleftIMmMImIleftSUMRESleftMULDIVrightUMINUSrightNOTAND BOOL CA CARACTER CE CHAR COMA COS DEF DIV DPNTO ELSE ENTERO EQ EXP FALSE FLOAT I ID IF INT LEN LLA LLE LOG M MI MUL NEWLINE NOT OR PA PE PNTO REAL RES RETURN SEN SUM TRUE TYPE WHILE m mIprograma : linea programa\n                    | linea : expresion NEWLINE\n                | expresion\n                | declaracion_variable NEWLINE\n                | declaracion_variable\n                | NEWLINElista_declaraciones : declaracion\n                            | lista_declaraciones COMA declaraciondeclaracion : ID\n                    | ID EQ expresion\n                    | CE ENTERO CA IDexpresion : ID PNTO LENelemento : ID CE ENTERO CAexpresion : ID CE ENTERO CA EQ expresionexpresion : ID EQ expresiondeclaracion_variable : tipo lista_declaracionesexpresion : TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierregrupo_apertura : opt_newline LLE opt_newlinegrupo_cierre : opt_newline LLA opt_newlineopt_newline : NEWLINE\n                    | bloque_propiedades : propiedad\n                            | propiedad NEWLINE\n                            | propiedad NEWLINE bloque_propiedades\n                            | propiedad bloque_propiedades\n                            | NEWLINE bloque_propiedadespropiedad : tipo lista_idslista_ids : ID\n                    | lista_ids COMA IDexpresion : idsids : ID IDexpresion : ID PNTO IDexpresion : ID PNTO ID EQ expresionexpresion : ID CE ENTERO CA PNTO IDexpresion : IF expresion bloqueexpresion : IF expresion bloque ELSE bloqueexpresion : WHILE expresion bloquebloque : grupo_apertura expresiones grupo_cierreexpresiones : expresion\n                | expresion NEWLINE\n                | expresion NEWLINE expresionestipo_base : INT\n                    | FLOAT\n                    | BOOL\n                    | CHARtipo : tipo_base\n                | tipo_base CE ENTERO CA\n                | ID\n                | ID CE ENTERO CAexpresion : expresion OR expresion_logica\n                    | expresion_logicaexpresion_logica : expresion_logica AND expresion_relacional\n                        | expresion_relacionalexpresion_relacional : termino_aritmetico I termino_aritmetico\n                            | termino_aritmetico M termino_aritmetico\n                            | termino_aritmetico m termino_aritmetico\n                            | termino_aritmetico MI termino_aritmetico\n                            | termino_aritmetico mI termino_aritmetico\n                            | termino_aritmeticotermino_aritmetico : termino_aritmetico SUM factor\n                            | termino_aritmetico RES factor\n                            | factorfactor : factor MUL elemento\n                | factor DIV elemento\n                | elementobooleano : TRUE\n                    | FALSEelemento : ENTERO\n                    | REAL\n                    | booleano\n                    | CARACTER\n                    | ID\n                    | PE expresion PA\n                    | RES elemento %prec UMINUS\n                    | NOT elemento\n                    | SEN PE expresion PA\n                    | COS PE expresion PA\n                    | EXP PE expresion PA\n                    | LOG PE expresion PA'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,35,36,38,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,110,111,115,116,117,118,119,127,128,132,133,134,135,136,138,144,149,],[-2,0,-2,-4,-7,-6,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-1,-3,-5,-32,-73,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,-9,-11,-77,-78,-79,-80,-34,-37,-39,-14,-12,-14,-15,-35,-18,-22,-20,]),'NEWLINE':([0,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,36,38,39,44,45,46,48,49,50,62,63,65,70,71,72,74,75,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,104,105,106,107,108,110,111,115,116,117,118,119,123,124,125,127,128,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,147,149,151,],[4,4,36,-7,38,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-3,-5,-32,79,-73,79,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,79,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,125,79,79,130,79,-9,-11,-77,-78,-79,-80,-34,79,139,125,-37,-39,-41,-19,-14,-12,-14,-15,-35,-18,125,-26,-27,-28,-29,79,-42,-25,-20,-30,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,34,36,37,38,39,40,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,83,84,87,88,89,90,91,92,93,94,95,97,102,103,104,108,110,111,112,113,115,116,117,118,119,120,121,122,124,125,126,127,128,130,131,132,133,134,135,136,138,139,142,143,144,148,149,150,151,],[6,6,-4,-7,-6,39,-69,43,-31,45,45,-52,50,-54,-47,-60,-43,-44,-45,-46,-63,63,-66,-70,-71,-72,45,63,-67,-68,-3,63,-5,-32,71,45,39,63,-17,-8,-10,63,63,63,63,63,63,63,63,63,-75,-73,-76,45,45,45,45,-51,-33,-13,-16,-36,45,-21,-38,-53,50,45,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,45,-14,122,-22,-9,-11,133,-48,-77,-78,-79,-80,-34,45,136,-49,122,122,143,-37,-39,45,-19,-14,-12,-14,-15,-35,-18,122,-28,-29,-22,151,-20,-50,-30,]),'TYPE':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,23,24,25,26,27,33,34,36,38,39,42,45,48,49,50,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[8,8,-4,-7,-6,-73,-69,-31,8,8,-52,-54,-60,-63,-66,-70,-71,-72,8,-67,-68,-3,-5,-32,8,-73,-17,-8,-10,-75,-73,-76,8,8,8,8,-51,-33,-13,-16,-36,8,-21,-38,-53,8,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,8,-14,-22,-9,-11,-77,-78,-79,-80,-34,8,-37,-39,8,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'IF':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,23,24,25,26,27,33,34,36,38,39,42,45,48,49,50,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[10,10,-4,-7,-6,-73,-69,-31,10,10,-52,-54,-60,-63,-66,-70,-71,-72,10,-67,-68,-3,-5,-32,10,-73,-17,-8,-10,-75,-73,-76,10,10,10,10,-51,-33,-13,-16,-36,10,-21,-38,-53,10,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,10,-14,-22,-9,-11,-77,-78,-79,-80,-34,10,-37,-39,10,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'WHILE':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,23,24,25,26,27,33,34,36,38,39,42,45,48,49,50,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[11,11,-4,-7,-6,-73,-69,-31,11,11,-52,-54,-60,-63,-66,-70,-71,-72,11,-67,-68,-3,-5,-32,11,-73,-17,-8,-10,-75,-73,-76,11,11,11,11,-51,-33,-13,-16,-36,11,-21,-38,-53,11,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,11,-14,-22,-9,-11,-77,-78,-79,-80,-34,11,-37,-39,11,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'INT':([0,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,36,38,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,104,108,110,111,115,116,117,118,119,124,125,127,128,131,132,133,134,135,136,138,139,142,143,144,149,151,],[17,17,-4,-7,-6,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-3,-5,-32,-73,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,17,-22,-9,-11,-77,-78,-79,-80,-34,17,17,-37,-39,-19,-14,-12,-14,-15,-35,-18,17,-28,-29,-22,-20,-30,]),'FLOAT':([0,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,36,38,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,104,108,110,111,115,116,117,118,119,124,125,127,128,131,132,133,134,135,136,138,139,142,143,144,149,151,],[18,18,-4,-7,-6,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-3,-5,-32,-73,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,18,-22,-9,-11,-77,-78,-79,-80,-34,18,18,-37,-39,-19,-14,-12,-14,-15,-35,-18,18,-28,-29,-22,-20,-30,]),'BOOL':([0,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,36,38,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,104,108,110,111,115,116,117,118,119,124,125,127,128,131,132,133,134,135,136,138,139,142,143,144,149,151,],[19,19,-4,-7,-6,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-3,-5,-32,-73,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,19,-22,-9,-11,-77,-78,-79,-80,-34,19,19,-37,-39,-19,-14,-12,-14,-15,-35,-18,19,-28,-29,-22,-20,-30,]),'CHAR':([0,2,3,4,5,6,7,9,12,14,16,21,23,24,25,26,33,34,36,38,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,103,104,108,110,111,115,116,117,118,119,124,125,127,128,131,132,133,134,135,136,138,139,142,143,144,149,151,],[20,20,-4,-7,-6,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-3,-5,-32,-73,-17,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,20,-22,-9,-11,-77,-78,-79,-80,-34,20,20,-37,-39,-19,-14,-12,-14,-15,-35,-18,20,-28,-29,-22,-20,-30,]),'ENTERO':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,41,42,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,80,81,82,84,87,88,89,90,91,92,93,94,95,96,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,137,138,144,149,],[7,7,-4,-7,-6,-73,-69,-31,7,7,-52,-54,-60,-63,7,-66,-70,-71,-72,7,7,-67,-68,-3,7,-5,-32,73,7,-73,7,-17,-8,-10,85,86,7,7,7,7,7,7,7,7,7,-75,-73,-76,7,7,7,7,-51,-33,-13,-16,-36,7,-21,109,-38,-53,7,-55,-56,-57,-58,-59,-61,-62,-64,-65,114,-74,7,-14,-22,-9,-11,-77,-78,-79,-80,-34,7,-37,-39,7,-19,-14,-12,-14,-15,-35,146,-18,-22,-20,]),'REAL':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[24,24,-4,-7,-6,-73,-69,-31,24,24,-52,-54,-60,-63,24,-66,-70,-71,-72,24,24,-67,-68,-3,24,-5,-32,24,-73,24,-17,-8,-10,24,24,24,24,24,24,24,24,24,-75,-73,-76,24,24,24,24,-51,-33,-13,-16,-36,24,-21,-38,-53,24,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,24,-14,-22,-9,-11,-77,-78,-79,-80,-34,24,-37,-39,24,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'CARACTER':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[26,26,-4,-7,-6,-73,-69,-31,26,26,-52,-54,-60,-63,26,-66,-70,-71,-72,26,26,-67,-68,-3,26,-5,-32,26,-73,26,-17,-8,-10,26,26,26,26,26,26,26,26,26,-75,-73,-76,26,26,26,26,-51,-33,-13,-16,-36,26,-21,-38,-53,26,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,26,-14,-22,-9,-11,-77,-78,-79,-80,-34,26,-37,-39,26,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'PE':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[27,27,-4,-7,-6,-73,-69,-31,27,27,-52,-54,-60,-63,27,-66,-70,-71,-72,27,27,66,67,68,69,-67,-68,-3,27,-5,-32,27,-73,27,-17,-8,-10,27,27,27,27,27,27,27,27,27,-75,-73,-76,27,27,27,27,-51,-33,-13,-16,-36,27,-21,-38,-53,27,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,27,-14,-22,-9,-11,-77,-78,-79,-80,-34,27,-37,-39,27,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'RES':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[22,22,-4,-7,-6,-73,-69,-31,22,22,-52,-54,59,-63,22,-66,-70,-71,-72,22,22,-67,-68,-3,22,-5,-32,22,-73,22,-17,-8,-10,22,22,22,22,22,22,22,22,22,-75,-73,-76,22,22,22,22,-51,-33,-13,-16,-36,22,-21,-38,-53,22,59,59,59,59,59,-61,-62,-64,-65,-74,22,-14,-22,-9,-11,-77,-78,-79,-80,-34,22,-37,-39,22,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'NOT':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[28,28,-4,-7,-6,-73,-69,-31,28,28,-52,-54,-60,-63,28,-66,-70,-71,-72,28,28,-67,-68,-3,28,-5,-32,28,-73,28,-17,-8,-10,28,28,28,28,28,28,28,28,28,-75,-73,-76,28,28,28,28,-51,-33,-13,-16,-36,28,-21,-38,-53,28,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,28,-14,-22,-9,-11,-77,-78,-79,-80,-34,28,-37,-39,28,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'SEN':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[29,29,-4,-7,-6,-73,-69,-31,29,29,-52,-54,-60,-63,29,-66,-70,-71,-72,29,29,-67,-68,-3,29,-5,-32,29,-73,29,-17,-8,-10,29,29,29,29,29,29,29,29,29,-75,-73,-76,29,29,29,29,-51,-33,-13,-16,-36,29,-21,-38,-53,29,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,29,-14,-22,-9,-11,-77,-78,-79,-80,-34,29,-37,-39,29,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'COS':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[30,30,-4,-7,-6,-73,-69,-31,30,30,-52,-54,-60,-63,30,-66,-70,-71,-72,30,30,-67,-68,-3,30,-5,-32,30,-73,30,-17,-8,-10,30,30,30,30,30,30,30,30,30,-75,-73,-76,30,30,30,30,-51,-33,-13,-16,-36,30,-21,-38,-53,30,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,30,-14,-22,-9,-11,-77,-78,-79,-80,-34,30,-37,-39,30,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'EXP':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[31,31,-4,-7,-6,-73,-69,-31,31,31,-52,-54,-60,-63,31,-66,-70,-71,-72,31,31,-67,-68,-3,31,-5,-32,31,-73,31,-17,-8,-10,31,31,31,31,31,31,31,31,31,-75,-73,-76,31,31,31,31,-51,-33,-13,-16,-36,31,-21,-38,-53,31,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,31,-14,-22,-9,-11,-77,-78,-79,-80,-34,31,-37,-39,31,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'LOG':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[32,32,-4,-7,-6,-73,-69,-31,32,32,-52,-54,-60,-63,32,-66,-70,-71,-72,32,32,-67,-68,-3,32,-5,-32,32,-73,32,-17,-8,-10,32,32,32,32,32,32,32,32,32,-75,-73,-76,32,32,32,32,-51,-33,-13,-16,-36,32,-21,-38,-53,32,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,32,-14,-22,-9,-11,-77,-78,-79,-80,-34,32,-37,-39,32,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'TRUE':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[33,33,-4,-7,-6,-73,-69,-31,33,33,-52,-54,-60,-63,33,-66,-70,-71,-72,33,33,-67,-68,-3,33,-5,-32,33,-73,33,-17,-8,-10,33,33,33,33,33,33,33,33,33,-75,-73,-76,33,33,33,33,-51,-33,-13,-16,-36,33,-21,-38,-53,33,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,33,-14,-22,-9,-11,-77,-78,-79,-80,-34,33,-37,-39,33,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'FALSE':([0,2,3,4,5,6,7,9,10,11,12,14,16,21,22,23,24,25,26,27,28,33,34,36,37,38,39,42,45,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,76,77,79,81,82,84,87,88,89,90,91,92,93,94,95,97,102,103,108,110,111,115,116,117,118,119,120,127,128,130,131,132,133,134,135,136,138,144,149,],[34,34,-4,-7,-6,-73,-69,-31,34,34,-52,-54,-60,-63,34,-66,-70,-71,-72,34,34,-67,-68,-3,34,-5,-32,34,-73,34,-17,-8,-10,34,34,34,34,34,34,34,34,34,-75,-73,-76,34,34,34,34,-51,-33,-13,-16,-36,34,-21,-38,-53,34,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,34,-14,-22,-9,-11,-77,-78,-79,-80,-34,34,-37,-39,34,-19,-14,-12,-14,-15,-35,-18,-22,-20,]),'OR':([3,6,7,9,12,14,16,21,23,24,25,26,33,34,39,44,45,46,62,63,64,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,98,99,100,101,103,107,111,115,116,117,118,119,127,128,132,134,135,136,138,144,149,],[37,-73,-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-32,37,-73,37,-75,-73,37,-76,-51,-33,-13,37,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,37,37,37,37,-14,37,37,-77,-78,-79,-80,37,-37,-39,-14,-14,37,-35,-18,-22,-20,]),'PNTO':([6,45,103,132,],[40,40,121,121,]),'CE':([6,13,15,17,18,19,20,45,63,83,103,113,122,],[41,51,52,-43,-44,-45,-46,80,96,51,-50,-48,137,]),'EQ':([6,45,50,71,103,132,],[42,42,84,102,120,120,]),'MUL':([6,7,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,60,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,60,60,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'DIV':([6,7,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,61,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,61,61,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'I':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,53,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'M':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,54,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'m':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,55,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'MI':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,56,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'mI':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,57,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'SUM':([6,7,16,21,23,24,25,26,33,34,45,62,63,65,87,88,89,90,91,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,58,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,58,58,58,58,58,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'AND':([6,7,12,14,16,21,23,24,25,26,33,34,45,62,63,65,70,82,87,88,89,90,91,92,93,94,95,97,103,115,116,117,118,132,134,],[-73,-69,47,-54,-60,-63,-66,-70,-71,-72,-67,-68,-73,-75,-73,-76,47,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-14,-77,-78,-79,-80,-14,-14,]),'LLE':([7,9,12,14,16,21,23,24,25,26,33,34,39,44,45,46,62,63,65,70,71,72,74,75,76,78,79,81,82,87,88,89,90,91,92,93,94,95,97,105,115,116,117,118,119,127,128,132,134,135,136,138,144,149,],[-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-32,-22,-73,-22,-75,-73,-76,-51,-33,-13,-16,-22,-36,108,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-22,-77,-78,-79,-80,-34,-37,-39,-14,-14,-15,-35,-18,-22,-20,]),'PA':([7,9,12,14,16,21,23,24,25,26,33,34,39,45,62,63,64,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,98,99,100,101,115,116,117,118,119,127,128,132,134,135,136,138,144,149,],[-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-32,-73,-75,-73,97,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,115,116,117,118,-77,-78,-79,-80,-34,-37,-39,-14,-14,-15,-35,-18,-22,-20,]),'LLA':([7,9,12,14,16,21,23,24,25,26,33,34,39,45,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,106,107,115,116,117,118,119,123,124,127,128,129,130,132,134,135,136,138,139,140,141,142,143,144,145,147,149,151,],[-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-32,-73,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-22,-40,-77,-78,-79,-80,-34,-22,-23,-37,-39,144,-41,-14,-14,-15,-35,-18,-24,-26,-27,-28,-29,-22,-42,-25,-20,-30,]),'COMA':([7,9,12,14,16,21,23,24,25,26,33,34,39,45,48,49,50,62,63,65,70,71,72,74,76,79,81,82,87,88,89,90,91,92,93,94,95,97,110,111,115,116,117,118,119,127,128,132,133,134,135,136,138,142,143,144,149,151,],[-69,-31,-52,-54,-60,-63,-66,-70,-71,-72,-67,-68,-32,-73,83,-8,-10,-75,-73,-76,-51,-33,-13,-16,-36,-21,-38,-53,-55,-56,-57,-58,-59,-61,-62,-64,-65,-74,-9,-11,-77,-78,-79,-80,-34,-37,-39,-14,-12,-14,-15,-35,-18,148,-29,-22,-20,-30,]),'LEN':([40,],[72,]),'DPNTO':([43,],[75,]),'CA':([73,85,86,109,114,146,],[103,112,113,132,134,150,]),'ELSE':([76,79,128,144,149,],[105,-21,-39,-22,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,35,]),'linea':([0,2,],[2,2,]),'expresion':([0,2,10,11,27,42,66,67,68,69,77,84,102,120,130,],[3,3,44,46,64,74,98,99,100,101,107,111,119,135,107,]),'declaracion_variable':([0,2,],[5,5,]),'ids':([0,2,10,11,27,42,66,67,68,69,77,84,102,120,130,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expresion_logica':([0,2,10,11,27,37,42,66,67,68,69,77,84,102,120,130,],[12,12,12,12,12,70,12,12,12,12,12,12,12,12,12,12,]),'tipo':([0,2,104,124,125,139,],[13,13,126,126,126,126,]),'expresion_relacional':([0,2,10,11,27,37,42,47,66,67,68,69,77,84,102,120,130,],[14,14,14,14,14,14,14,82,14,14,14,14,14,14,14,14,14,]),'tipo_base':([0,2,104,124,125,139,],[15,15,15,15,15,15,]),'termino_aritmetico':([0,2,10,11,27,37,42,47,53,54,55,56,57,66,67,68,69,77,84,102,120,130,],[16,16,16,16,16,16,16,16,87,88,89,90,91,16,16,16,16,16,16,16,16,16,]),'factor':([0,2,10,11,27,37,42,47,53,54,55,56,57,58,59,66,67,68,69,77,84,102,120,130,],[21,21,21,21,21,21,21,21,21,21,21,21,21,92,93,21,21,21,21,21,21,21,21,21,]),'elemento':([0,2,10,11,22,27,28,37,42,47,53,54,55,56,57,58,59,60,61,66,67,68,69,77,84,102,120,130,],[23,23,23,23,62,23,65,23,23,23,23,23,23,23,23,23,23,94,95,23,23,23,23,23,23,23,23,23,]),'booleano':([0,2,10,11,22,27,28,37,42,47,53,54,55,56,57,58,59,60,61,66,67,68,69,77,84,102,120,130,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'lista_declaraciones':([13,],[48,]),'declaracion':([13,83,],[49,110,]),'bloque':([44,46,105,],[76,81,127,]),'grupo_apertura':([44,46,75,105,],[77,77,104,77,]),'opt_newline':([44,46,75,105,106,108,123,144,],[78,78,78,78,129,131,129,149,]),'expresiones':([77,130,],[106,145,]),'bloque_propiedades':([104,124,125,139,],[123,140,141,147,]),'propiedad':([104,124,125,139,],[124,124,124,124,]),'grupo_cierre':([106,123,],[128,138,]),'lista_ids':([126,],[142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> linea programa','programa',2,'p_programa','parser.py',43),
  ('programa -> <empty>','programa',0,'p_programa','parser.py',44),
  ('linea -> expresion NEWLINE','linea',2,'p_linea','parser.py',48),
  ('linea -> expresion','linea',1,'p_linea','parser.py',49),
  ('linea -> declaracion_variable NEWLINE','linea',2,'p_linea','parser.py',50),
  ('linea -> declaracion_variable','linea',1,'p_linea','parser.py',51),
  ('linea -> NEWLINE','linea',1,'p_linea','parser.py',52),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','parser.py',62),
  ('lista_declaraciones -> lista_declaraciones COMA declaracion','lista_declaraciones',3,'p_lista_declaraciones','parser.py',63),
  ('declaracion -> ID','declaracion',1,'p_declaracion','parser.py',68),
  ('declaracion -> ID EQ expresion','declaracion',3,'p_declaracion','parser.py',69),
  ('declaracion -> CE ENTERO CA ID','declaracion',4,'p_declaracion','parser.py',70),
  ('expresion -> ID PNTO LEN','expresion',3,'p_expresion_vector_len','parser.py',82),
  ('elemento -> ID CE ENTERO CA','elemento',4,'p_elemento_acceso_vector','parser.py',92),
  ('expresion -> ID CE ENTERO CA EQ expresion','expresion',6,'p_asignacion_vector_elemento','parser.py',109),
  ('expresion -> ID EQ expresion','expresion',3,'p_asignacion_variable','parser.py',195),
  ('declaracion_variable -> tipo lista_declaraciones','declaracion_variable',2,'p_declaracion_variable','parser.py',230),
  ('expresion -> TYPE ID DPNTO grupo_apertura bloque_propiedades grupo_cierre','expresion',6,'p_declaracion_tipo_registro','parser.py',281),
  ('grupo_apertura -> opt_newline LLE opt_newline','grupo_apertura',3,'p_grupo_apertura','parser.py',293),
  ('grupo_cierre -> opt_newline LLA opt_newline','grupo_cierre',3,'p_grupo_cierre','parser.py',297),
  ('opt_newline -> NEWLINE','opt_newline',1,'p_opt_newline','parser.py',301),
  ('opt_newline -> <empty>','opt_newline',0,'p_opt_newline','parser.py',302),
  ('bloque_propiedades -> propiedad','bloque_propiedades',1,'p_bloque_propiedades','parser.py',306),
  ('bloque_propiedades -> propiedad NEWLINE','bloque_propiedades',2,'p_bloque_propiedades','parser.py',307),
  ('bloque_propiedades -> propiedad NEWLINE bloque_propiedades','bloque_propiedades',3,'p_bloque_propiedades','parser.py',308),
  ('bloque_propiedades -> propiedad bloque_propiedades','bloque_propiedades',2,'p_bloque_propiedades','parser.py',309),
  ('bloque_propiedades -> NEWLINE bloque_propiedades','bloque_propiedades',2,'p_bloque_propiedades','parser.py',310),
  ('propiedad -> tipo lista_ids','propiedad',2,'p_propiedad','parser.py',332),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','parser.py',337),
  ('lista_ids -> lista_ids COMA ID','lista_ids',3,'p_lista_ids','parser.py',338),
  ('expresion -> ids','expresion',1,'p_declaracion_registro','parser.py',345),
  ('ids -> ID ID','ids',2,'p_ids_registro','parser.py',349),
  ('expresion -> ID PNTO ID','expresion',3,'p_expresion_acceso_registro','parser.py',381),
  ('expresion -> ID PNTO ID EQ expresion','expresion',5,'p_asignacion_propiedad_registro','parser.py',399),
  ('expresion -> ID CE ENTERO CA PNTO ID','expresion',6,'p_expresion_acceso_vector_registro','parser.py',437),
  ('expresion -> IF expresion bloque','expresion',3,'p_expresion_if_simple','parser.py',470),
  ('expresion -> IF expresion bloque ELSE bloque','expresion',5,'p_expresion_if_else','parser.py',477),
  ('expresion -> WHILE expresion bloque','expresion',3,'p_expresion_while','parser.py',484),
  ('bloque -> grupo_apertura expresiones grupo_cierre','bloque',3,'p_bloque_llaves','parser.py',492),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','parser.py',497),
  ('expresiones -> expresion NEWLINE','expresiones',2,'p_expresiones','parser.py',498),
  ('expresiones -> expresion NEWLINE expresiones','expresiones',3,'p_expresiones','parser.py',499),
  ('tipo_base -> INT','tipo_base',1,'p_tipo_base','parser.py',512),
  ('tipo_base -> FLOAT','tipo_base',1,'p_tipo_base','parser.py',513),
  ('tipo_base -> BOOL','tipo_base',1,'p_tipo_base','parser.py',514),
  ('tipo_base -> CHAR','tipo_base',1,'p_tipo_base','parser.py',515),
  ('tipo -> tipo_base','tipo',1,'p_tipo','parser.py',521),
  ('tipo -> tipo_base CE ENTERO CA','tipo',4,'p_tipo','parser.py',522),
  ('tipo -> ID','tipo',1,'p_tipo','parser.py',523),
  ('tipo -> ID CE ENTERO CA','tipo',4,'p_tipo','parser.py',524),
  ('expresion -> expresion OR expresion_logica','expresion',3,'p_expresion','parser.py',536),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','parser.py',537),
  ('expresion_logica -> expresion_logica AND expresion_relacional','expresion_logica',3,'p_expresion_logica','parser.py',549),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','parser.py',550),
  ('expresion_relacional -> termino_aritmetico I termino_aritmetico','expresion_relacional',3,'p_expresion_relacional','parser.py',562),
  ('expresion_relacional -> termino_aritmetico M termino_aritmetico','expresion_relacional',3,'p_expresion_relacional','parser.py',563),
  ('expresion_relacional -> termino_aritmetico m termino_aritmetico','expresion_relacional',3,'p_expresion_relacional','parser.py',564),
  ('expresion_relacional -> termino_aritmetico MI termino_aritmetico','expresion_relacional',3,'p_expresion_relacional','parser.py',565),
  ('expresion_relacional -> termino_aritmetico mI termino_aritmetico','expresion_relacional',3,'p_expresion_relacional','parser.py',566),
  ('expresion_relacional -> termino_aritmetico','expresion_relacional',1,'p_expresion_relacional','parser.py',567),
  ('termino_aritmetico -> termino_aritmetico SUM factor','termino_aritmetico',3,'p_termino_aritmetico','parser.py',581),
  ('termino_aritmetico -> termino_aritmetico RES factor','termino_aritmetico',3,'p_termino_aritmetico','parser.py',582),
  ('termino_aritmetico -> factor','termino_aritmetico',1,'p_termino_aritmetico','parser.py',583),
  ('factor -> factor MUL elemento','factor',3,'p_factor','parser.py',600),
  ('factor -> factor DIV elemento','factor',3,'p_factor','parser.py',601),
  ('factor -> elemento','factor',1,'p_factor','parser.py',602),
  ('booleano -> TRUE','booleano',1,'p_booleano','parser.py',618),
  ('booleano -> FALSE','booleano',1,'p_booleano','parser.py',619),
  ('elemento -> ENTERO','elemento',1,'p_elemento','parser.py',623),
  ('elemento -> REAL','elemento',1,'p_elemento','parser.py',624),
  ('elemento -> booleano','elemento',1,'p_elemento','parser.py',625),
  ('elemento -> CARACTER','elemento',1,'p_elemento','parser.py',626),
  ('elemento -> ID','elemento',1,'p_elemento','parser.py',627),
  ('elemento -> PE expresion PA','elemento',3,'p_elemento','parser.py',628),
  ('elemento -> RES elemento','elemento',2,'p_elemento','parser.py',629),
  ('elemento -> NOT elemento','elemento',2,'p_elemento','parser.py',630),
  ('elemento -> SEN PE expresion PA','elemento',4,'p_elemento','parser.py',631),
  ('elemento -> COS PE expresion PA','elemento',4,'p_elemento','parser.py',632),
  ('elemento -> EXP PE expresion PA','elemento',4,'p_elemento','parser.py',633),
  ('elemento -> LOG PE expresion PA','elemento',4,'p_elemento','parser.py',634),
]
